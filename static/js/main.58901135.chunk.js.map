{"version":3,"sources":["CssModules/Dialog/DialogFriend.module.css","img/Avatars/mordovia.jpg","img/Avatars/ali.png","img/Avatars/cat.jpeg","img/Avatars/sarumyan.jpg","CssModules/portal.module.css","img/Preloaders/Spinner-1.4s-3a356a.svg","CssModules/Dialog/PersonDialog.module.css","CssModules/buttonsUnderAva.module.css","img/fail-1.1s-128px.svg","img/NoResultSearch/coon.jpg","CssModules/UsersSearch/pagesSearch.module.css","CssModules/Settings/settingsStyles.module.css","CssModules/UpperMenu/UpperMenu.module.css","CssModules/Profile/FriendList/Friends.module.css","CssModules/Profile/MyPosts/posts.module.css","img/Avatars/nullPhoto.jpg","serviceWorker.js","Components/DataBases/Reducers/PostsReducer.js","Components/DataBases/API/API.js","Components/DataBases/Reducers/FriendsReducer.js","Components/DataBases/Reducers/LoginReducer.js","Components/DataBases/Reducers/ProfileInfoReducer.js","Components/DataBases/Reducers/UserReducer.js","Components/DataBases/Reducers/MessagesReducer.js","Components/DataBases/Reducers/SubscribesReducer.js","Components/DataBases/Redux/Store.js","Components/LeftMenu/NavigateMenu.js","Components/Friends/FindFriends/AddButton/addButton.js","Components/Friends/FindFriends/AddButton/addButtonContainer.js","Components/Friends/FindFriends/UserDecor/findFriends.js","Components/Friends/FindFriends/UserDecor/FindFriendsContainer.js","Components/Friends/FindFriends/AllUsers/usersSearch.js","Components/Friends/FindFriends/AllUsers/PagesButtons/pages.js","Components/Friends/FindFriends/AllUsers/PagesButtons/pagesContainer.js","Components/Common/Preloader.js","Components/Friends/FindFriends/AllUsers/allUsersClass.js","Components/Friends/FindFriends/AllUsers/allUsersClassContainer.js","Components/Profile/Avatar/AvatarEditor.js","Components/Profile/Avatar/Avatar.js","Components/Profile/FriendList/MyFriend/FriendLittleAva.js","Components/Profile/Subscribes/SubscribeList.js","Components/Common/redirectToLogin.js","Components/Profile/MainInfo/Status/statusClass.js","Components/Profile/MainInfo/Status/statusClassContainer.js","Components/Profile/MainInfo/nameAndAbout.js","Components/Profile/PostRedactor/postRedactor.js","Components/Profile/PostRedactor/PostRedactorContainer.js","Components/Profile/MyPosts/post.js","Components/Profile/MyPosts/postsClass.js","Components/Profile/MyPosts/postsClassContainer.js","Components/Profile/FriendList/Friend.js","Components/Profile/FriendList/friendContainer.js","Components/Profile/MainProfilePage/ProfileCenterInfoClass.js","Components/Profile/MainProfilePage/ProfileCenterInfoClassContainer.js","Components/Validations/LoginValidate/loginValidateSync.js","Components/Validations/LoginValidate/loginValidateAsync.js","Components/Common/createFieldForm.js","Components/UpperMenu/Login/LoginPage/email.js","Components/UpperMenu/Login/LoginPage/password.js","Components/UpperMenu/Login/LoginPage/rememberMe.js","Components/UpperMenu/Login/LoginPage/captcha.js","Components/Validations/LoginValidate/loginAsyncForm.js","Components/UpperMenu/Login/LoginPage/LoginPage.js","Components/UpperMenu/Login/LoginPage/LoginPageContainer.js","Components/Settings/ChangeAboutMe/changeAboutMe.js","Components/Settings/ChangeContacts/changeContacts.js","Components/Common/validator.js","Components/Settings/ChangeLookJob/changeLookJob.js","Components/Settings/Ð¡hangeName/changeNameClass.js","Components/Settings/settings.js","Components/Settings/settingsContainer.js","Components/Dialog/MainDialogPage/DialogPage/DialogMessage.js","Components/Dialog/MainDialogPage/DialogPage/DialogUpper.js","Components/Dialog/MainDialogPage/DialogPage/DialogInput/DialogInput.js","Components/Dialog/MainDialogPage/DialogPage/DialogInput/DialogInputContainer.js","Components/Dialog/MainDialogPage/DialogPage/DialogPage.js","Components/Dialog/MainDialogPage/DialogPage/DialogPageContainer.js","Components/Dialog/MainDialogPage/MiniDialogs/DialogsMini.js","Components/Common/NoResultSearch.js","Components/Dialog/MainDialogPage/DialogList.js","Components/Dialog/MainDialogPage/DialogListContainer.js","Components/Dialog/MainDialogPage/Dialogs.js","Components/Dialog/MainDialogPage/DialogsContainer.js","Components/Friends/myFriends/FriendsSearch.js","Components/Friends/myFriends/ThatFriend/ThatFriend.js","Components/Friends/myFriends/ThatFriend/AllFriends.js","Components/Friends/myFriends/ThatFriend/AllFriendsContainer.js","Components/Friends/myFriends/friendsSearchContainer.js","Components/Friends/myFriends/myFriends.js","Components/LeftMenu/navigateMenuContainer.js","Components/mainText.js","Components/UpperMenu/Login/UpperLogInfo.js","Components/UpperMenu/Login/upperLogInfoContainer.js","Components/UpperMenu/upperClassContainer.js","Components/UpperMenu/upperClassContainerX2.js","Components/MainStructure/Structure.js","Components/MainStructure/structureContainer.js","index.js","CssModules/Profile/Status/statusStyles.module.css","CssModules/Profile/MainInfo/mainInfo.module.css","CssModules/DisplayView.module.css","CssModules/LeftMenu/menu.module.css","CssModules/Login/loginStyles.module.css","img/Avatars/pendalf.jpg","CssModules/Preloader/Preloaders.module.css","CssModules/Profile/Subscribe/Subscribe.module.css","CssModules/AvatarEditor/avatarEditor.module.css","CssModules/NoResultSearch/resultStyles.module.css","CssModules/content.module.css","img/Avatars/senya.jpg","CssModules/Friends/Friends.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","defaultStatePosts","ProfileInfo","id","Name","LastName","Status","Avatar","Sarumyan","Posts","name","text","ava","likes","Senya","Pendalf","currentProfilePosts","Temp","PostRedactor","instance","axios","withCredentials","headers","baseURL","instancePhoto","API","pageSize","currentPage","user","bool","get","then","response","data","status","put","email","password","remember","captcha","post","delete","formData","body","messageId","url","addFriend","type","deleteFriend","defaultStateFriends","friends","avatar","followed","tempSearch","loginRequest","logData","login","buttonAction","defaultStateLogin","isLogged","buttonRequest","loadProfileData","getProfile","who","setProfile","getFollow","boolean","getStatus","getProfileInfo","dispatch","a","getStatusThunk","getProfileThunk","responseFollow","getMyProfileThunk","items","getAllDialogs","setAnotherProfile","checkWho","switchIsFetching","initializeApp","postProfilePhotoThunk","defaultStateProfile","logged","userId","fullName","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","photos","large","small","currentProfile","myProfile","defaultStateUsers","users","totalUsers","isFetching","pageButton","addButton","addUser","deleteUser","setUsers","setTotalUsers","count","switchIsButton","switchIsAddButton","deleteMessageCreation","mesId","getMessagesWithUser","me","putNewDialogThunk","getUserAllMessagesThunk","getDialogThunk","defaultStateMessage","Dialogs","freshDialogs","defaultStateSubscribes","Mordovia","Ali","Staff","allReduces","combineReducers","postsReducer","state","action","stateCopy","checkId","length","createPost","push","checkPosts","i","splice","messageReducer","getIndex","index","countUpdatingDialogs","hasNewMessages","emptyPhoto","Messages","senderName","senderId","dialogIndex","profileInfoReducer","subscribesReducer","friendsReducer","uniqueUrlName","usersReducer","map","us","page","loginReducer","cap","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","NavigateMenu","props","className","MenuLeft","container__menu_grid","onClick","to","container__menu_decoration","AddButton","useState","follow","setFollow","useEffect","deleteButtonClasses","Content","content__asideRightDeleteButton_decor","content__asideRightButtonPadding","content__asideRightButton_margin","addButtonClasses","content__asideRightButton_decor","deleteUserThunk","disabled","addUserThunk","AddButtonContainer","connect","Users","Preloaders","Preloader__backgroundOpacity","e","preventDefault","Dialog","display__flex","hover__decor","NavLinks__fontsDecor","Friend","Friend__Ava","display__AvaPosition","src","alt","border__borderBottom","text__NameFontsDecor","UsersContainer","UserSearch","React","createRef","Friends","container__displayFlex","placeholder","input__width","input__decor","input__padding","ref","onChange","tempText","current","value","updateSearchText","onKeyPress","event","searchRequest","which","getUsersThunk","Pages","pagesCount","Math","ceil","pages","portionCount","portionSize","portionNumber","setPortionNumber","leftPageNumber","rightPageNumber","numberButtonsClasses","PagesButtons","button__decor","button__padding","pages_pageButtons__width","pages_pageButtons__margin","portionButtonsPrevClasses","pages_portionButtons__width","pages_portionButtonsPrev__margin","portionButtonsNextClasses","pages_portionButtonsNext__margin","totalButtons","filter","number","button_selected__decor","setPage","pages_container__flex","pages_pageButtons__size","pages_portionButtons__size","PagesContainer","pageCounts","Preloader","Preloader__position","Spinner","AllUsersClass","content__menu_decorationBlocks","Preloader__Opacity","key","AllUsersClassContainer","totalCount","MyEditor","upImg","setUpImg","imgRef","setImgRef","unit","width","height","crop","setCrop","previewUrl","setPreviewUrl","previewLoad","setPreviewLoad","editMode","setEditMode","setDisabled","onLoad","useCallback","img","makeClientCrop","createCropPreview","image","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","file","File","URL","revokeObjectURL","createObjectURL","Error","uploadFile","FormData","append","updatePhoto","clearImgData","getElementById","buttonClasses","AvaEdit","avaEdit__button","avaEdit_button__padding","avaEdit_button__margin","fileUpload","accept","target","files","reader","FileReader","addEventListener","result","readAsDataURL","Portal","modal","cropImage__width","onImageLoaded","c","onComplete","maxHeight","maxWidth","avaEdit__buttonDisabled","AvatarPhoto","setAvatar","startDialogButtonClasses","buttonsS","main_buttons__width","content__mainContentAvatar","uploadPhoto","updatePhotoSize","tempPhoto","MyFriend","meOrNot","myId","margin","Friend__Font","Subscribes","mapStateToRedirect","initialized","authRedirect","Component","RedirectComponent","this","StatusClass","mode","switchMode","switchStatus","StatusS","status_button__decor","status__buttonWidth","status_button__padding","status_button__margins","containerButtonClass","status_buttons__flex","inputClasses","status_input__decor","status_input__padding","onSubmit","putStatusThunk","handleSubmit","Field","autoFocus","component","status__buttonDisabled","StatusClassContainer","compose","ReduxStatusForm","reduxForm","enableReinitialize","MainInfo","more","setMore","keys","Object","values","containerClasses","InfoS","mainInfo_contacts__flexDisplay","valueClasses","mainInfo_value__margin","mainInfo_value__width","mainInfo_value__decor","keyClasses","mainInfo_key__width","mainInfo_key__decor","showMoreClasses","mainInfo_showMore__decor","content__mainContentName","initialValues","skills","search","toUpperCase","slice","currentText","setPost","content__asideRightInput_decor","PostRedactorContainer","updatePostTextCreation","postCreation","NewPost","display","pict","name__marginLeft","name__Fonts","title","deletePost","deleteButton__marginLeft","deleteButton__decor","post__margins","mainDecor","borderBottom","likeMainDecor","PostsClass","sortedPosts","posts","elem","deletePostCreation","reverse","PostsClassContainer","FriendList","font__size","display__grid","all","array","sort","random","min","friend","allFriends","FriendListContainer","ProfileCenterInfoClass","fetch","setFetch","Displays","inside_ContentProfile__displayFlex","inside_ProfileCenter__FlexProportion","inside_ProfileRight__FlexProportion","lookingForAJobDescription","lookingForAJob","ProfileCenterInfoClassContainer","myProfilePosts","subscribe","validate","errors","asyncValidate","ms","setTimeout","includes","username","CreateFieldForm","label","validators","EmailField","settingsS","settings_container__flex","settings_container__margin","paramClasses","settings_param__decor","settings_input__decor","settings_input__padding","settings_input__margins","renderField","PasswordField","RememberMe","settings_checkbox","CaptchaField","loginS","captcha_container__block","captchaImgClasses","captcha_img__decor","blockClasses","captcha_block__margin","input","meta","asyncValidating","touched","error","asyncBlurFields","pristine","reset","submitting","settings__button","settings__buttonWidth","settings_button__padding","errorClass","captcha_error__decor","logThunk","ErrorSVG","captcha_errorText__margin","settings__buttonDisabled","LoginPage","buttonLoginClasses","Person","log__padding","log__button","postLogThunk","class","LoginReduxForm","resultCode","stopSubmit","_error","messages","ChangeAboutMe","ChangeContacts","ChangeLookJob","checkBoxClasses","ChangeName","Settings","putProfileInfoThunk","SettingsForm","Message","viewed","dialog_viewedMessages__color","dialog__flex","dialog_name__margin","dialog_img","avatars","dialog_name","dialog_time","date","deleteMessage","message__marginLeft","message__containerSize","message__marginTop","message","Upper","upper__border","upper__marginBottom","upper__font","upper_text__margin","upper_text__padding","userName","Input","input__margins","input__borderTop","postMessageThunk","inputField__border","InputContainer","dialogId","loc","updateMessageCreation","DialogPage","Number","params","userID","currentMessages","allDialog","mes","addedAt","deleteMessageThunk","paddingOff","container","DialogPageContainer","withRouter","MiniDialogs","newMess","dialog_containerViewMessages","getDialogs","NoResultSearch","imgClasses","ResultS","noResult_img__decor","noResult_img__width","noResult_text__decor","noResult_img__margin","coon","DialogLists","dialogsData","pattern","RegExp","dialogs","dialog","newMessagesCount","DialogsListContainer","temp","DialogContainer","FriendsSearch","updateSearch","ThatFriend","AllFriends","char","AllFriendsContainer","FriendSearchContainer","MyFriends","NavigateMenuContainer","Text","Objects","main__displayGRid","path","render","from","UpperLogInfo","loginButtonClasses","log__margin","log__buttonWidth","log_img","log_img__cursorPointer","log_display__flex","didLog","postLogOutThunk","UpperLogInfoContainer","UpperClassContainer","UpMenu","container__menu","UpperClassContainerTwo","MacketApp","MacketAppContainer","initializate","modalRoot","Modal","el","appendChild","removeChild","ReactDOM","createPortal","children","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.58901135.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"display__flex\":\"DialogFriend_display__flex__3xzpl\",\"input__width\":\"DialogFriend_input__width__1Px7z\",\"input__decor\":\"DialogFriend_input__decor__LFtVN\",\"input__padding\":\"DialogFriend_input__padding__1nZoW\",\"display__AvaPosition\":\"DialogFriend_display__AvaPosition__1kkUL\",\"hover__decor\":\"DialogFriend_hover__decor__1hr_H\",\"NavLinks__fontsDecor\":\"DialogFriend_NavLinks__fontsDecor__-KWBH\",\"text__NameFontsDecor\":\"DialogFriend_text__NameFontsDecor__fyC5v\",\"text__MessageFontsDecor\":\"DialogFriend_text__MessageFontsDecor__10rPp\",\"border__borderBottom\":\"DialogFriend_border__borderBottom__1cHeZ\",\"lastImg__decor\":\"DialogFriend_lastImg__decor__2EKI_\",\"dialog_containerViewMessages\":\"DialogFriend_dialog_containerViewMessages__3IpP6\"};","module.exports = __webpack_public_path__ + \"static/media/mordovia.4235ff49.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ali.56b5ac7d.png\";","module.exports = __webpack_public_path__ + \"static/media/cat.587efa6e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/sarumyan.1cb38a93.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-root\":\"portal_app-root__oAQXd\",\"modal-root\":\"portal_modal-root__2aE3x\",\"modal\":\"portal_modal__3V-26\",\"cropImage__width\":\"portal_cropImage__width__2yItD\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner-1.4s-3a356a.4b7d2a00.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PersonDialog_container__3DsEv\",\"paddingOff\":\"PersonDialog_paddingOff__1xBNf\",\"upper__font\":\"PersonDialog_upper__font__1udKP\",\"upper__border\":\"PersonDialog_upper__border__2wOIh\",\"upper__marginBottom\":\"PersonDialog_upper__marginBottom__2_yY7\",\"upper_text__margin\":\"PersonDialog_upper_text__margin__2cd_t\",\"upper_text__padding\":\"PersonDialog_upper_text__padding__147hA\",\"dialog__flex\":\"PersonDialog_dialog__flex__1iBws\",\"dialog_img\":\"PersonDialog_dialog_img__Td2XR\",\"dialog_name\":\"PersonDialog_dialog_name__2gEl6\",\"dialog_name__margin\":\"PersonDialog_dialog_name__margin__2pQ2P\",\"dialog_viewedMessages__color\":\"PersonDialog_dialog_viewedMessages__color__nduyP\",\"dialog_time\":\"PersonDialog_dialog_time__RCcRM\",\"message__block\":\"PersonDialog_message__block__22E_G\",\"message__marginLeft\":\"PersonDialog_message__marginLeft__1HibX\",\"message__marginTop\":\"PersonDialog_message__marginTop__kPdLj\",\"message__containerSize\":\"PersonDialog_message__containerSize__1VAI_\",\"input__decor\":\"PersonDialog_input__decor__277zV\",\"input__margins\":\"PersonDialog_input__margins__2zgeq\",\"inputField__border\":\"PersonDialog_inputField__border__WhLaT\",\"input__borderTop\":\"PersonDialog_input__borderTop__1tDf5\",\"deleteButton__marginLeft\":\"PersonDialog_deleteButton__marginLeft__2nSH6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_buttons__width\":\"buttonsUnderAva_main_buttons__width__1ZD91\"};","module.exports = __webpack_public_path__ + \"static/media/fail-1.1s-128px.f7c1a036.svg\";","module.exports = __webpack_public_path__ + \"static/media/coon.34f4a856.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button__decor\":\"pagesSearch_button__decor__2i1b8\",\"button__padding\":\"pagesSearch_button__padding__MnFBX\",\"button__margins\":\"pagesSearch_button__margins__2-xH8\",\"button_selected__decor\":\"pagesSearch_button_selected__decor__2drM4\",\"pages_container__flex\":\"pagesSearch_pages_container__flex__3GanG\",\"pages_portionButtons__size\":\"pagesSearch_pages_portionButtons__size__uoXGF\",\"pages_pageButtons__size\":\"pagesSearch_pages_pageButtons__size__1qDYO\",\"pages_pageButtons__width\":\"pagesSearch_pages_pageButtons__width__1uoCz\",\"pages_portionButtons__width\":\"pagesSearch_pages_portionButtons__width__3mbKI\",\"pages_pageButtons__margin\":\"pagesSearch_pages_pageButtons__margin__1LGsn\",\"pages_portionButtonsPrev__margin\":\"pagesSearch_pages_portionButtonsPrev__margin__20uu1\",\"pages_portionButtonsNext__margin\":\"pagesSearch_pages_portionButtonsNext__margin__1RgtJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings_container__flex\":\"settingsStyles_settings_container__flex__isx-8\",\"settings_container__margin\":\"settingsStyles_settings_container__margin__2uxSE\",\"settings_input__decor\":\"settingsStyles_settings_input__decor__27j8f\",\"settings_input__padding\":\"settingsStyles_settings_input__padding__3XOth\",\"settings_input__margins\":\"settingsStyles_settings_input__margins__3SSSp\",\"settings_param__decor\":\"settingsStyles_settings_param__decor__1orja\",\"settings__button\":\"settingsStyles_settings__button__3dM7m\",\"settings__buttonDisabled\":\"settingsStyles_settings__buttonDisabled__1s1Rp\",\"settings__buttonWidth\":\"settingsStyles_settings__buttonWidth__2rsDp\",\"settings_button__padding\":\"settingsStyles_settings_button__padding__2FRfs\",\"settings_checkbox\":\"settingsStyles_settings_checkbox__2w7u4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__menu\":\"UpperMenu_container__menu__12_bf\",\"container__menu_flex\":\"UpperMenu_container__menu_flex__2M9wU\",\"right\":\"UpperMenu_right__UtE8J\",\"log_img\":\"UpperMenu_log_img__1peUV\",\"log__margin\":\"UpperMenu_log__margin__2CK_W\",\"log__padding\":\"UpperMenu_log__padding__3OLeT\",\"log_img__cursorPointer\":\"UpperMenu_log_img__cursorPointer__kaCOA\",\"log__button\":\"UpperMenu_log__button__2QeEQ\",\"log__buttonDisabled\":\"UpperMenu_log__buttonDisabled__1DX8l\",\"log__buttonWidth\":\"UpperMenu_log__buttonWidth__2QMLD\",\"log_display__flex\":\"UpperMenu_log_display__flex__1myoW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"font__size\":\"Friends_font__size__pF55I\",\"display__grid\":\"Friends_display__grid__1ehKm\",\"Friend__Ava\":\"Friends_Friend__Ava__68pO_\",\"Friend__Font\":\"Friends_Friend__Font__35QJp\",\"margin\":\"Friends_margin__2VRcX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"posts_image__1u23V\",\"mainDecor\":\"posts_mainDecor__2_3kc\",\"borderBottom\":\"posts_borderBottom__2_Nmk\",\"likeMainDecor\":\"posts_likeMainDecor__3yKI3\",\"display\":\"posts_display__2L41T\",\"post__margins\":\"posts_post__margins__2wMMQ\",\"name__marginLeft\":\"posts_name__marginLeft__2d7ge\",\"name__Fonts\":\"posts_name__Fonts__3TSR5\",\"deleteButton__marginLeft\":\"posts_deleteButton__marginLeft__1mQY7\",\"deleteButton__decor\":\"posts_deleteButton__decor__3izxg\"};","module.exports = __webpack_public_path__ + \"static/media/nullPhoto.e8c8c61a.jpg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Sarumyan from \"../../../img/Avatars/sarumyan.jpg\";\r\nimport Senya from \"../../../img/Avatars/senya.jpg\";\r\nimport Pendalf from \"../../../img/Avatars/pendalf.jpg\";\r\n\r\nconst ADD_POST = 'addPost';\r\nconst UPDATE_POST_TEXT = 'updateTextPostRedactor';\r\nconst DELETE_POST = 'deletePost';\r\nexport const postCreation = currentProfile => ({type: ADD_POST, currentProfile});\r\nexport const updatePostTextCreation = text => ({type: UPDATE_POST_TEXT, text});\r\nexport const deletePostCreation = (id, currentProfile) => ({type: DELETE_POST, id, currentProfile});\r\n\r\nlet defaultStatePosts = {\r\n    ProfileInfo: {\r\n        id: 0,\r\n        Name: \"Sarumyan\",\r\n        LastName: '',\r\n        Status: '',\r\n        Avatar: Sarumyan,\r\n    },\r\n    Posts: [\r\n        {id: 0, name: 'Sarumyan', text: 'Hello world !', ava: Sarumyan, likes: 11},\r\n        {id: 1, name: 'Senya', text: 'Hi', ava: Senya, likes: 15},\r\n        {id: 2, name: 'Pendalf', text: 'Hi', ava: Pendalf, likes: 99},\r\n        {id: 3, name: 'Pendalf', text: 'Hiiiii', ava: Pendalf, likes: 999}\r\n    ],\r\n    currentProfilePosts: [\r\n\r\n    ],\r\n    Temp: [\r\n        {\r\n            PostRedactor: ''\r\n        },\r\n    ]\r\n};\r\n\r\nexport function PostsInstructions(state = defaultStatePosts, action) {\r\n    // debugger\r\n    let stateCopy = {\r\n        ...state,\r\n        Posts: [...state.Posts]\r\n    };\r\n    switch (action.type) {\r\n        case ADD_POST:{\r\n            let id = 0;\r\n            let checkId = action.currentProfile ? stateCopy.Posts.length : stateCopy.currentProfilePosts.length;\r\n            if (checkId !== 0 && action.currentProfile){\r\n                id = stateCopy\r\n                    .Posts[stateCopy.Posts.length - 1]\r\n                    .id + 1\r\n            } else if (checkId !== 0 && !action.currentProfile){\r\n                id = stateCopy\r\n                    .currentProfilePosts[stateCopy.currentProfilePosts.length - 1]\r\n                    .id + 1\r\n            }\r\n            let createPost = {\r\n                id: id,\r\n                name: state.ProfileInfo.Name,\r\n                text: state.Temp[0].PostRedactor,\r\n                ava: state.ProfileInfo.Avatar,\r\n                likes: 0\r\n            };\r\n            action.currentProfile ? stateCopy.Posts.push(createPost) : stateCopy.currentProfilePosts.push(createPost);\r\n            stateCopy.Temp[0].PostRedactor = [...state.Temp[0].PostRedactor];\r\n            stateCopy.Temp[0].PostRedactor = '';\r\n            return stateCopy;\r\n        }\r\n        case UPDATE_POST_TEXT: {\r\n            stateCopy.Temp[0].PostRedactor = action.text;\r\n            return stateCopy;\r\n        }\r\n\r\n        case DELETE_POST:\r\n            let checkPosts = action.currentProfile ? stateCopy.Posts : stateCopy.currentProfilePosts;\r\n            for (let i = 0; i < checkPosts.length; i++) {\r\n                if (checkPosts[i].id === action.id) {\r\n                    checkPosts.splice(i, 1)\r\n                }\r\n            }\r\n            return stateCopy;\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '8d2e390a-6ddc-4d40-87d5-55b4df812b3f',\r\n        // 'API-KEY': '750fc5a8-75a5-4ef1-94f4-80017fafe472',\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n});\r\n\r\nconst instancePhoto = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '8d2e390a-6ddc-4d40-87d5-55b4df812b3f',\r\n        // 'API-KEY': '750fc5a8-75a5-4ef1-94f4-80017fafe472',\r\n        'Content-Type': 'multipart/form-data'\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n});\r\n\r\nexport const API = {\r\n    getUsers(pageSize = 10, currentPage = 1, user = '', bool = '') {\r\n        return instance.get(`users?count=${pageSize}&page=${currentPage}&term=${user}&friend=${bool}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getProfile(id) {\r\n        return instance.get(`profile/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    getStatus(id) {\r\n        return instance.get(`profile/status/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    putStatus(status) {\r\n        return instance.put(`profile/status`, {status})\r\n    },\r\n    putProfileInfo(data) {\r\n        return instance.put(`profile`, data)\r\n    },\r\n\r\n    getAuth() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    postLog(email, password, remember, captcha) {\r\n        return instance.post(`auth/login?email=${email}&password=${password}&rememberMe=${remember}&captcha=${captcha}`)\r\n            .then(response => {\r\n                return response\r\n            })\r\n    },\r\n    postLogOut() {\r\n        return instance.post(`auth/logout`)\r\n            .then(response => {\r\n                return response\r\n            })\r\n    },\r\n    getFollow(id) {\r\n        return instance.get(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    postFriendFollow(id) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(response => {\r\n                return response\r\n            })\r\n    },\r\n    postFriendUnFollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => {\r\n                return response\r\n            })\r\n    },\r\n    postAvatarPhoto(formData) {\r\n        return instancePhoto.post(`profile/photo`, formData)\r\n            .then(response => {\r\n                return response.data.data\r\n            })\r\n    },\r\n    putNewDialog(id) {\r\n        // debugger\r\n        return instance.put(`dialogs/${id}`)\r\n            .then(response => {\r\n                return response\r\n            })\r\n    },\r\n    getDialogs() {\r\n        // debugger\r\n        return instance.get(`dialogs`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    postMessage(id, body) {\r\n        // debugger\r\n        return instance.post(`dialogs/${id}/messages`, {body})\r\n            .then(response => {\r\n                return response\r\n            })\r\n    },\r\n    deleteMessage(messageId) {\r\n        // debugger\r\n        return instance.delete(`dialogs/messages/${messageId}`)\r\n            .then(response => {\r\n                return response\r\n            })\r\n    },\r\n    getDialog(id) {\r\n        return instance.get(`dialogs/${id}/messages`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getCaptcha() {\r\n        return instance.get(`security/get-captcha-url`)\r\n            .then(response => {\r\n                return response.data.url\r\n            })\r\n    }\r\n};\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport Senya from \"../../../img/Avatars/senya.jpg\";\r\nimport Pendalf from \"../../../img/Avatars/pendalf.jpg\";\r\nimport emptyPhoto from \"../../../img/Avatars/nullPhoto.jpg\";\r\n\r\n\r\nconst ADD_FRIEND = 'addFriend';\r\nconst DELETE_FRIEND = 'deleteFriend';\r\nconst LOAD_FRIENDS = 'loadFriends'\r\nconst UPDATE_SEARCH = 'updateSearch'\r\nexport const addFriend = (data) => ({type: ADD_FRIEND, data});\r\nexport const deleteFriend = id => ({type: DELETE_FRIEND, id});\r\nexport const loadFriends = data => ({type: LOAD_FRIENDS, data});\r\nexport const updateSearch = text => ({type: UPDATE_SEARCH, text});\r\n\r\n\r\nlet defaultStateFriends = {\r\n    friends: [\r\n        {\r\n            id: 0,\r\n            name: 'Senya Lutiy',\r\n            avatar: Senya,\r\n            followed: true\r\n        },\r\n        {\r\n            id: 1,\r\n            name: 'Pendalf Grey',\r\n            avatar: Pendalf,\r\n            followed: true\r\n        }\r\n    ],\r\n    tempSearch: ''\r\n}\r\n\r\nexport function FriendsInstructions(state = defaultStateFriends, action) {\r\n    let stateCopy = {...state, friends: [...state.friends]};\r\n    switch (action.type) {\r\n        case ADD_FRIEND:\r\n            action.data.avatar = action.data.avatar || emptyPhoto\r\n            return {...state, friends: [...state.friends, action.data]}\r\n        case DELETE_FRIEND:\r\n            for (let i = 0; i < stateCopy.length; i++) {\r\n                if (stateCopy[i].id === action.id) {\r\n                    stateCopy.splice(i, 1)\r\n                }\r\n            }\r\n            return stateCopy;\r\n        case LOAD_FRIENDS:\r\n            for (let i = 0; i < action.data.length; i++) {\r\n                action.data[i].avatar = action.data[i].photos.large || emptyPhoto\r\n                delete action.data[i].photos\r\n                delete action.data[i].status\r\n                delete action.data[i].uniqueUrlName\r\n            }\r\n            return {...state, friends: [...action.data]}\r\n        case UPDATE_SEARCH:\r\n            return {...state, tempSearch: action.text}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {API} from \"../API/API\";\r\nimport {getMyProfileThunk, initializeApp} from \"./ProfileInfoReducer\";\r\nimport {reset, stopSubmit} from \"redux-form\";\r\n\r\nconst LOGIN_REQUEST = 'loginRequest';\r\nexport const loginRequest = (email, password, remember) => ({type: LOGIN_REQUEST, data: {email, password, remember}});\r\nconst LOG_DATA = 'logData';\r\nexport const logData = (id, login, email) => ({type: LOG_DATA, data: {id, login, email}});\r\nconst BUTTON_ACTION = 'buttonAction';\r\nexport const buttonAction = bool => ({type: BUTTON_ACTION, bool});\r\nconst LOAD_PROFILE_DATA = 'loadProfileData';\r\nexport const loadProfileData = () => ({type: LOAD_PROFILE_DATA});\r\nconst GET_CAPTCHA = 'getCaptcha';\r\nexport const getCaptcha = cap => ({type: GET_CAPTCHA, cap});\r\n\r\nexport const postLogThunk = (email, password, remember, captcha) => {\r\n    return async dispatch => {\r\n        dispatch(buttonAction(true))\r\n        let response = await API.postLog(email, password, remember, captcha)\r\n        if (response.data.resultCode === 0) {\r\n            let data = await API.getAuth()\r\n            dispatch(loginRequest(email, password, remember))\r\n            await dispatch(initializeApp(data.data.id));\r\n            dispatch(logData(data.data.id, data.data.login, data.data.email));\r\n        } else if (response.data.resultCode === 10) {\r\n            let data = await API.getCaptcha()\r\n            dispatch(getCaptcha(data))\r\n            dispatch(stopSubmit('asyncValidation', {_error: response.data.messages[0]}))\r\n        } else {\r\n            dispatch(stopSubmit('asyncValidation', {_error: response.data.messages[0]}))\r\n        }\r\n        dispatch(buttonAction(false))\r\n    }\r\n};\r\n\r\n\r\nexport const postLogOutThunk = () => {\r\n    return async dispatch => {\r\n        await API.postLogOut()\r\n        dispatch(logData(null, null, null));\r\n        API.getAuth()\r\n    }\r\n};\r\n\r\n\r\nlet defaultStateLogin = {\r\n    logData: {\r\n        id: null,\r\n        login: null,\r\n        email: null,\r\n    },\r\n    isLogged: false,\r\n    buttonRequest: false,\r\n    loadProfileData: false,\r\n    captcha: null\r\n};\r\n\r\nexport function LoginInstructions(state = defaultStateLogin, action) {\r\n    switch (action.type) {\r\n        case GET_CAPTCHA:\r\n            return {...state, captcha: action.cap}\r\n        case LOGIN_REQUEST:\r\n            return {...state, ...action.data, email: '', password: '', remember: false}\r\n        case BUTTON_ACTION:\r\n            return {...state, buttonRequest: action.bool}\r\n        case LOG_DATA:\r\n            return {...state, logData: {...action.data}, isLogged: !!action.data.id}\r\n        case LOAD_PROFILE_DATA:\r\n            return {...state, loadProfileData: true}\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {API} from \"../API/API\";\r\nimport {loadProfileData} from \"./LoginReducer\";\r\nimport {switchIsFetching} from \"./UserReducer\";\r\nimport emptyPhoto from \"./../../../img/Avatars/nullPhoto.jpg\"\r\nimport {getAllDialogs} from \"./MessagesReducer\";\r\nimport {loadFriends} from \"./FriendsReducer\";\r\n\r\nconst GET_PROFILE = 'getProfile';\r\nexport const getProfile = (user, who) => ({type: GET_PROFILE, user, who});\r\nconst SET_PROFILE = 'setProfile';\r\nexport const setProfile = bool => ({type: SET_PROFILE, bool});\r\nconst GET_FOLLOW = 'follow';\r\nexport const getFollow = boolean => ({type: GET_FOLLOW, boolean});\r\nconst GET_STATUS = 'getStatus';\r\nexport const getStatus = status => ({type: GET_STATUS, status});\r\n\r\n\r\nconst getProfileInfo = (id, who) => {\r\n    return async dispatch => {\r\n        let data = await API.getProfile(id)\r\n        await dispatch(getProfile(data, who));\r\n        await dispatch(getStatusThunk(id))\r\n    }\r\n}\r\n\r\n\r\nexport const getProfileThunk = (id, who) => {\r\n    return async dispatch => {\r\n        await dispatch(getProfileInfo(id, who))\r\n        let responseFollow = await API.getFollow(id)\r\n        return dispatch(getFollow(responseFollow))\r\n    }\r\n};\r\n\r\nexport const getMyProfileThunk = (id, who) => {\r\n    return async dispatch => {\r\n        await dispatch(getProfileInfo(id, who))\r\n        let friends = await API.getUsers(100,1,'',true)\r\n        dispatch(loadFriends(friends.items))\r\n        let response = await API.getDialogs()\r\n        return dispatch(getAllDialogs(response))\r\n    }\r\n};\r\n\r\n\r\nexport const setAnotherProfile = (id, who) => async dispatch => {\r\n    let checkWho = who === 'me'\r\n    dispatch(switchIsFetching(true))\r\n    dispatch(setProfile(checkWho))\r\n    checkWho ? await dispatch(getMyProfileThunk(id, who)) : await dispatch(getProfileThunk(id, who));\r\n    dispatch(switchIsFetching(false))\r\n}\r\n\r\nexport const initializeApp = id => async dispatch => {\r\n    try {\r\n        await dispatch(getMyProfileThunk(id, 'me'));\r\n        return dispatch(loadProfileData());\r\n    } finally {\r\n        return dispatch(loadProfileData());\r\n    }\r\n}\r\n\r\nexport const getStatusThunk = id => {\r\n    return async dispatch => {\r\n        let data = await API.getStatus(id)\r\n        return dispatch(getStatus(data));\r\n    }\r\n};\r\n\r\nexport const putStatusThunk = status => {\r\n    return async dispatch => {\r\n        await API.putStatus(status)\r\n        return dispatch(getStatus(status));\r\n    }\r\n};\r\n\r\n\r\nexport const putProfileInfoThunk = (data, id) => {\r\n    return async dispatch => {\r\n        await API.putProfileInfo(data)\r\n        let response = await API.getProfile(id)\r\n        dispatch(getProfile(response, 'me'));\r\n        dispatch(setProfile(true))\r\n    }\r\n};\r\n\r\n\r\nexport const postProfilePhotoThunk = (formData, id) => {\r\n    return async dispatch => {\r\n        await API.postAvatarPhoto(formData)\r\n        let data = await API.getProfile(id)\r\n        dispatch(getProfile(data, 'me'));\r\n        dispatch(setProfile(true))\r\n    }\r\n};\r\n\r\nlet defaultStateProfile = {\r\n    logged: {\r\n        userId: null,\r\n        fullName: null,\r\n        status: null,\r\n        aboutMe: null,\r\n        contacts: {\r\n            facebook: null,\r\n            website: null,\r\n            vk: null,\r\n            twitter: null,\r\n            instagram: null,\r\n            youtube: null,\r\n            github: null,\r\n            mainLink: null\r\n        },\r\n        photos: {\r\n            large: null,\r\n            small: null\r\n        },\r\n    },\r\n    currentProfile: {\r\n        userId: null,\r\n        fullName: null,\r\n        status: null,\r\n        aboutMe: null,\r\n        contacts: {\r\n            facebook: null,\r\n            website: null,\r\n            vk: null,\r\n            twitter: null,\r\n            instagram: null,\r\n            youtube: null,\r\n            github: null,\r\n            mainLink: null\r\n        },\r\n        photos: {\r\n            large: null,\r\n            small: null\r\n        },},\r\n    followed: null,\r\n    myProfile: true,\r\n};\r\n\r\nexport function ProfileInstructions(state = defaultStateProfile, action) {\r\n    let stateCopy = {\r\n        ...state,\r\n    }\r\n    switch (action.type) {\r\n        case GET_PROFILE:\r\n            action.who === 'me' ? stateCopy.logged = action.user : stateCopy.currentProfile = action.user\r\n            stateCopy.logged.status = state.logged.status\r\n            return stateCopy;\r\n        case SET_PROFILE:\r\n            return {...state, myProfile: action.bool};\r\n        case GET_STATUS:\r\n            stateCopy.myProfile ? stateCopy.logged.status = action.status : stateCopy.currentProfile.status = action.status\r\n            return stateCopy\r\n        case GET_FOLLOW:\r\n            stateCopy.followed = action.boolean\r\n            return stateCopy\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {API} from \"../API/API\";\r\nimport {addFriend, deleteFriend} from \"./FriendsReducer\";\r\nimport {getFollow} from \"./ProfileInfoReducer\";\r\n\r\nlet defaultStateUsers = {\r\n    users: [],\r\n    tempSearch: '',\r\n    totalUsers: 0,\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n    isFetching: false,\r\n    pageButton: false,\r\n    addButton: false,\r\n};\r\n\r\n//create class for dispatches\r\nconst SET_USERS = 'setUsers';\r\nconst SET_PAGE = 'setPage';\r\nconst SET_TOTAL_USERS = 'setTotalUsers';\r\nconst ADD_USER = 'addUser';\r\nconst DELETE_USER = 'deleteUser';\r\nconst SWITCH_IS_FETCHING = 'switchIsFetching';\r\nconst SWITCH_IS_BUTTON = 'switchIsButton';\r\nconst SWITCH_IS_ADD_BUTTON = 'switchIsAddButton';\r\nconst UPDATE_SEARCH_TEXT = 'userReducer/updateSearchText';\r\nexport const addUser = (id) => ({type: ADD_USER, id});\r\nexport const deleteUser = (id) => ({type: DELETE_USER, id});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setTotalUsers = (count) => ({type: SET_TOTAL_USERS, count});\r\nexport const setPage = (page) => ({type: SET_PAGE, page});\r\nexport const switchIsFetching = (bool) => ({type: SWITCH_IS_FETCHING, bool});\r\nexport const switchIsButton = (bool) => ({type: SWITCH_IS_BUTTON, bool});\r\nexport const switchIsAddButton = (bool) => ({type: SWITCH_IS_ADD_BUTTON, bool});\r\nexport const updateSearchText = (text) => ({type: UPDATE_SEARCH_TEXT, text});\r\n\r\nexport const getUsersThunk = (pageSize, currentPage, user) => {\r\n    return async dispatch => {\r\n        dispatch(switchIsFetching(true));\r\n        // dispatch(switchIsButton(true));\r\n        let data = await API.getUsers(pageSize, currentPage, user)\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsers(data.totalCount));\r\n        dispatch(switchIsFetching(false));\r\n        // dispatch(switchIsButton(false));\r\n    }\r\n};\r\n\r\nexport const addUserThunk = (id, name, avatar) => {\r\n    return async dispatch => {\r\n        dispatch(switchIsAddButton(true));\r\n        await API.postFriendFollow(id)\r\n        dispatch(addFriend({id, name, avatar, followed: true}));\r\n        dispatch(addUser(id))\r\n        dispatch(getFollow(true))\r\n        dispatch(switchIsAddButton(false));\r\n\r\n    }\r\n};\r\nexport const deleteUserThunk = (id) => {\r\n    return async dispatch => {\r\n        dispatch(switchIsAddButton(true));\r\n        await API.postFriendUnFollow(id)\r\n        dispatch(deleteFriend(id));\r\n        dispatch(deleteUser(id))\r\n        dispatch(getFollow(false))\r\n        dispatch(switchIsAddButton(false));\r\n    }\r\n};\r\n\r\n\r\nexport function UsersInstructions(state = defaultStateUsers, action) {\r\n    switch (action.type) {\r\n        case ADD_USER:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(us => {\r\n                    if (us.id === action.id) {\r\n                        return {...us, followed: true}\r\n                    }\r\n                    return us\r\n                }),\r\n            };\r\n        case DELETE_USER:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(us => {\r\n                    if (us.id === action.id) {\r\n                        return {...us, followed: false}\r\n                    }\r\n                    return us\r\n                })\r\n            };\r\n        case UPDATE_SEARCH_TEXT:\r\n            return {...state, tempSearch: action.text}\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]};\r\n        case SET_PAGE:\r\n            return {...state, currentPage: action.page};\r\n        case SET_TOTAL_USERS:\r\n            return {...state, totalUsers: action.count};\r\n        case SWITCH_IS_FETCHING:\r\n            return {...state, isFetching: action.bool};\r\n        case SWITCH_IS_BUTTON:\r\n            return {...state, pageButton: action.bool};\r\n        case SWITCH_IS_ADD_BUTTON:\r\n            return {...state, addButton: action.bool};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {API} from \"../API/API\";\r\nimport {switchIsFetching} from \"./UserReducer\";\r\nimport emptyPhoto from '../../../img/Avatars/nullPhoto.jpg'\r\n\r\n\r\nconst ADD_MESSAGE = 'addMessage';\r\nconst UPDATE_TEXT_MESSAGE = 'updateTextMessage';\r\nconst DELETE_TEXT_MESSAGE = 'deleteMessage';\r\nconst DIALOG_CREATION = 'dialogCreation';\r\nconst GET_ALL_DIALOGS = 'getAllDialogs';\r\nconst GET_MESSAGES_WITH_USER = 'getMessagesWithUser';\r\nconst UPDATE_SEARCH_TEXT = 'updateSearchText';\r\nexport const messageCreation = (date, id) => ({type: ADD_MESSAGE, date, id});\r\nexport const updateMessageCreation = (text, id) => ({type: UPDATE_TEXT_MESSAGE, text, id});\r\nexport const deleteMessageCreation = (mesId, id) => ({type: DELETE_TEXT_MESSAGE, mesId, id});\r\nexport const dialogCreation = data => ({type: DIALOG_CREATION, data});\r\nexport const getAllDialogs = data => ({type: GET_ALL_DIALOGS, data});\r\nexport const updateSearchText = text => ({type: UPDATE_SEARCH_TEXT, text});\r\nexport const getMessagesWithUser = (data, user, me) => ({type: GET_MESSAGES_WITH_USER, data, user, me});\r\n\r\nexport const putNewDialogThunk = data => {\r\n    return async dispatch => {\r\n        await API.putNewDialog(data.id)\r\n        let response = await API.getDialogs()\r\n        return dispatch(getAllDialogs(response));\r\n    }\r\n};\r\n\r\nexport const postMessageThunk = (id, message, me) => {\r\n    return async dispatch => {\r\n        await API.postMessage(id, message)\r\n        return dispatch(getDialogThunk(id, me))\r\n    }\r\n};\r\n\r\nexport const deleteMessageThunk = (mesId, id) => {\r\n    return async dispatch => {\r\n        await API.deleteMessage(mesId)\r\n        return dispatch(deleteMessageCreation(mesId, id))\r\n    }\r\n};\r\n\r\nexport const getUserAllMessagesThunk = (id, me) => async dispatch => {\r\n    dispatch(switchIsFetching(true))\r\n    await dispatch(getDialogThunk(id, me));\r\n    debugger\r\n    return dispatch(switchIsFetching(false))\r\n}\r\n\r\nexport const getDialogThunk = (id, me) => {\r\n    return async dispatch => {\r\n        let data = await API.getDialog(id)\r\n        let response = await API.getProfile(id)\r\n        return dispatch(getMessagesWithUser(data.items, response, me))\r\n    }\r\n};\r\n\r\n\r\nlet defaultStateMessage = {\r\n    Dialogs: [],\r\n    tempSearch: '',\r\n    freshDialogs: 0\r\n};\r\n\r\nexport function MessagesInstructions(state = defaultStateMessage, action) {\r\n    let stateCopy = {\r\n        ...state,\r\n        Dialogs: [...state.Dialogs]\r\n    };\r\n\r\n    let getIndex = id => {\r\n        let index;\r\n        for (let i = 0; i < stateCopy.Dialogs.length; i++) {\r\n            if (stateCopy.Dialogs[i].id === id) {\r\n                index = i\r\n            }\r\n        }\r\n        return index\r\n    };\r\n\r\n    switch (action.type) {\r\n        case UPDATE_SEARCH_TEXT:\r\n            return {...state, tempSearch: action.text}\r\n        case UPDATE_TEXT_MESSAGE:\r\n            stateCopy.Dialogs[action.id].Temp = action.text;\r\n            return stateCopy;\r\n        case GET_ALL_DIALOGS:\r\n            let countUpdatingDialogs = 0;\r\n            for (let i = 0; i < action.data.length; i++) {\r\n                if (action.data[i].hasNewMessages) countUpdatingDialogs++;\r\n                if (!action.data[i].photos.large) action.data[i].photos.large= action.data[i].photos.small = emptyPhoto\r\n                action.data[i].Messages = []\r\n            }\r\n            return {...state, Dialogs: [...action.data], freshDialogs: countUpdatingDialogs}\r\n        case GET_MESSAGES_WITH_USER:\r\n            let user = getIndex(action.user.userId)\r\n            stateCopy.Dialogs[user].Messages = action.data\r\n            for (let i = 0; i < action.data.length; i++) {\r\n                stateCopy.Dialogs[user].Messages[i].senderName =\r\n                    action.data[i].senderId === action.me.userId ? action.me.fullName : action.user.fullName;\r\n\r\n                stateCopy.Dialogs[user].Messages[i].Avatar =\r\n                    action.data[i].senderId === action.me.userId ? action.me.photos.large : action.user.photos.large || emptyPhoto;\r\n            }\r\n            return stateCopy;\r\n        case DELETE_TEXT_MESSAGE:\r\n            let dialogIndex = getIndex(action.id);\r\n            for (let i = 0; i < stateCopy.Dialogs[dialogIndex].Messages.length; i++) {\r\n                if (stateCopy.Dialogs[dialogIndex].Messages[i].id === action.mesId) {\r\n                    stateCopy.Dialogs[dialogIndex].Messages.splice(i, 1)\r\n                }\r\n            }\r\n            return stateCopy;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport Mordovia from \"../../../img/Avatars/mordovia.jpg\";\r\nimport Ali from \"../../../img/Avatars/ali.png\";\r\nimport Staff from \"../../../img/Avatars/cat.jpeg\";\r\n\r\nlet defaultStateSubscribes =  [\r\n    {\r\n        id: 0,\r\n        Name: 'Mordovia (official)',\r\n        Avatar: Mordovia,\r\n    },\r\n    {\r\n        id: 1,\r\n        Name: 'Aliexpress',\r\n        Avatar: Ali,\r\n    },\r\n    {\r\n        id: 2,\r\n        Name: 'Staffs - low price',\r\n        Avatar: Staff,\r\n    },\r\n\r\n];\r\n\r\nexport function SubscribesInstructions(state = defaultStateSubscribes, action) {\r\n    return state\r\n}","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {PostsInstructions} from \"../Reducers/PostsReducer\";\r\nimport {MessagesInstructions} from \"../Reducers/MessagesReducer\";\r\nimport {ProfileInstructions} from \"../Reducers/ProfileInfoReducer\";\r\nimport {SubscribesInstructions} from \"../Reducers/SubscribesReducer\";\r\nimport {FriendsInstructions} from \"../Reducers/FriendsReducer\";\r\nimport {UsersInstructions} from \"../Reducers/UserReducer\";\r\nimport {LoginInstructions} from \"../Reducers/LoginReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer as formReducer} from \"redux-form\";\r\n\r\nlet allReduces = combineReducers(\r\n    {\r\n        postsReducer: PostsInstructions,\r\n        messageReducer: MessagesInstructions,\r\n        profileInfoReducer: ProfileInstructions,\r\n        subscribesReducer: SubscribesInstructions,\r\n        friendsReducer: FriendsInstructions,\r\n        usersReducer: UsersInstructions,\r\n        loginReducer: LoginInstructions,\r\n        form: formReducer\r\n    }\r\n);\r\n\r\n\r\n\r\nexport const store = createStore(allReduces, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n","import React from \"react\";\r\nimport MenuLeft from '../../CssModules/LeftMenu/menu.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {setProfile} from \"../DataBases/Reducers/ProfileInfoReducer\";\r\nfunction NavigateMenu(props) {\r\n    let goToMyProfile = () => {\r\n        props.setProfile(true)\r\n    }\r\n    return(\r\n        <nav>\r\n            <ul className={`${MenuLeft.container__menu_grid}`}>\r\n                <li>\r\n                    <NavLink onClick={goToMyProfile} to='/profile' className={`${MenuLeft.container__menu_decoration}`}>Profile</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/dialogs' className={`${MenuLeft.container__menu_decoration}`}>Messages\r\n                        {props.freshDialogs > 0 && ' +' + props.freshDialogs}\r\n                    </NavLink>\r\n\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/friends' className={`${MenuLeft.container__menu_decoration}`}>Friends</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/settings' className={`${MenuLeft.container__menu_decoration}`}>Settings</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavigateMenu\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Content from \"../../../../CssModules/content.module.css\";\r\nimport {API} from \"../../../DataBases/API/API\";\r\n\r\nfunction AddButton(props) {\r\n    // debugger\r\n    let [follow, setFollow] = useState(props.followed)\r\n\r\n    useEffect(() => {\r\n        setFollow(props.followed)\r\n    }, [props.followed])\r\n\r\n    let addUser = () => {\r\n        props.addUserThunk(props.id, props.name, props.avatar)\r\n    };\r\n\r\n    let deleteUser = () => {\r\n        props.deleteUserThunk(props.id)\r\n    };\r\n\r\n    let deleteButtonClasses = `\r\n    ${Content.content__asideRightDeleteButton_decor} \r\n    ${Content.content__asideRightButtonPadding} \r\n    ${Content.content__asideRightButton_margin}\r\n    `;\r\n\r\n    let addButtonClasses = `\r\n    ${Content.content__asideRightButton_decor} \r\n    ${Content.content__asideRightButtonPadding}\r\n    ${Content.content__asideRightButton_margin}\r\n    `;\r\n    return (\r\n        <div>\r\n            {\r\n                follow ?\r\n                    <button\r\n                        onClick={deleteUser}\r\n                        disabled={props.addButton || props.isFetching}\r\n                        className={deleteButtonClasses}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                    :\r\n                    <button\r\n                        onClick={addUser}\r\n                        disabled={props.addButton || props.isFetching}\r\n                        className={addButtonClasses}\r\n                    >\r\n                        Add\r\n                    </button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddButton\r\n","import {addFriend, deleteFriend} from \"../../../DataBases/Reducers/FriendsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport AddButton from \"./addButton\";\r\nimport {\r\n    addUser,\r\n    addUserThunk,\r\n    deleteUser,\r\n    deleteUserThunk,\r\n    switchIsAddButton\r\n} from \"../../../DataBases/Reducers/UserReducer\";\r\n\r\nlet mapStateToProps = state => {\r\n    // debugger\r\n    return {\r\n        state: state.usersReducer,\r\n        addButton: state.usersReducer.addButton,\r\n        isFetching: state.usersReducer.isFetching,\r\n\r\n    }\r\n};\r\n\r\n\r\nconst AddButtonContainer = connect(mapStateToProps,\r\n    {\r\n        addFriend, deleteFriend, addUser,\r\n        deleteUser, switchIsAddButton, addUserThunk,\r\n        deleteUserThunk\r\n    }\r\n)\r\n(AddButton);\r\n\r\nexport default AddButtonContainer\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Dialog from \"../../../../CssModules/Dialog/DialogFriend.module.css\";\r\nimport Friend from \"../../../../CssModules/Profile/FriendList/Friends.module.css\";\r\nimport emptyPhoto from \"../../../../img/Avatars/nullPhoto.jpg\";\r\nimport AddButtonContainer from \"../AddButton/addButtonContainer\";\r\nimport Preloaders from \"../../../../CssModules/Preloader/Preloaders.module.css\";\r\n\r\n\r\nfunction Users(props) {\r\n    let throwProfileInfo = e => {\r\n        if (props.isFetching) return e.preventDefault()\r\n        props.setAnotherProfile(props.id, 'notMe')\r\n    }\r\n    return (\r\n        <div className={`${props.users.isFetching ? Preloaders.Preloader__backgroundOpacity : null}`}>\r\n            <NavLink onClick={throwProfileInfo} to={'/profile/' + props.id}\r\n                     className={`${Dialog.display__flex} ${Dialog.hover__decor} ${Dialog.NavLinks__fontsDecor}`}>\r\n                <div>\r\n                    <img className={`${Friend.Friend__Ava} ${Dialog.display__AvaPosition}`}\r\n                         src={props.avatar || emptyPhoto} alt='Ava'/>\r\n                </div>\r\n                <div className={Dialog.border__borderBottom}>\r\n                    <p className={`${Dialog.text__NameFontsDecor}`}>{`${props.name}`}</p>\r\n                </div>\r\n            </NavLink>\r\n            <AddButtonContainer id={props.id} avatar={props.avatar} name={props.name} followed={props.follow}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./findFriends\";\r\nimport {\r\n    getProfile,\r\n    getProfileThunk,\r\n    setAnotherProfile,\r\n    setProfile\r\n} from \"../../../DataBases/Reducers/ProfileInfoReducer\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    // debugger\r\n    return{\r\n        users: state.usersReducer,\r\n        isFetching: state.usersReducer.isFetching\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nconst UsersContainer = connect(mapStateToProps, {getProfile, setProfile, getProfileThunk, setAnotherProfile})(Users);\r\n\r\nexport default UsersContainer\r\n","import React from \"react\";\r\nimport Friends from '../../../../CssModules/Friends/Friends.module.css'\r\nimport Dialog from \"../../../../CssModules/Dialog/DialogFriend.module.css\";\r\n\r\n\r\nfunction UserSearch(props) {\r\n    let text = React.createRef()\r\n    let search = event => {\r\n        let searchRequest = text.current.value;\r\n        if (text){\r\n            if (event.which === 13){\r\n                props.getUsersThunk(1, 1, searchRequest);\r\n                event.preventDefault()\r\n            }\r\n        }\r\n    }\r\n\r\n    let updateSearchField = () => {\r\n        let tempText = text.current.value\r\n        props.updateSearchText(tempText)\r\n\r\n    }\r\n    return(\r\n        <div className={Friends.container__displayFlex}>\r\n            <input placeholder='Search user...'\r\n                   className={`${Dialog.input__width} ${Dialog.input__decor} ${Dialog.input__padding}`}\r\n                   ref={text}\r\n                   onChange={updateSearchField}\r\n                   onKeyPress={search}\r\n                   value={props.tempSearch}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserSearch\r\n","import React, {useState} from \"react\";\r\nimport PagesButtons from '../../../../../CssModules/UsersSearch/pagesSearch.module.css'\r\nimport {API} from \"../../../../DataBases/API/API\";\r\n\r\n\r\nfunction Pages(props) {\r\n    let pagesCount = Math.ceil(props.totalUsers / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / props.portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPageNumber = (portionNumber - 1) * props.portionSize\r\n    let rightPageNumber = portionNumber * props.portionSize;\r\n    const numberButtonsClasses = `${PagesButtons.button__decor} ${PagesButtons.button__padding} ${PagesButtons.pages_pageButtons__width} ${PagesButtons.pages_pageButtons__margin}`\r\n    const portionButtonsPrevClasses = `${PagesButtons.button__decor} ${PagesButtons.button__padding} ${PagesButtons.pages_portionButtons__width} ${PagesButtons.pages_portionButtonsPrev__margin}`\r\n    const portionButtonsNextClasses = `${PagesButtons.button__decor} ${PagesButtons.button__padding} ${PagesButtons.pages_portionButtons__width} ${PagesButtons.pages_portionButtonsNext__margin}`\r\n    let totalButtons = pages\r\n        .filter(number => number > leftPageNumber && number <= rightPageNumber)\r\n        .map(number => <button\r\n            disabled={props.pageButton}\r\n            onClick={() => currentPage(number)}\r\n            className={` ${numberButtonsClasses} ${props.currentPage === number && PagesButtons.button_selected__decor}`}>{number}</button>);\r\n    let currentPage = page => {\r\n        props.switchIsFetching(true);\r\n        props.switchIsButton(true);\r\n        props.setPage(page);\r\n        API.getUsers(props.pageSize, page)\r\n            .then(data => {\r\n                props.setUsers(data.items);\r\n                props.switchIsFetching(false);\r\n                props.switchIsButton(false);\r\n            })\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={`${PagesButtons.pages_container__flex}`}>\r\n            <div><button className={`${portionButtonsPrevClasses} ${PagesButtons.pages_pageButtons__margin}`} disabled={portionNumber === 1} onClick={() => setPortionNumber(portionNumber - 1)}>Prev</button></div>\r\n            <div className={`${PagesButtons.pages_pageButtons__size}`}>{totalButtons}</div>\r\n            <div className={`${PagesButtons.pages_portionButtons__size}`}>{portionNumber < portionCount && <button className={`${portionButtonsNextClasses}`} onClick={() => setPortionNumber(portionNumber + 1)}>Next</button>}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pages\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Pages from \"./pages\";\r\nimport {\r\n    setPage,\r\n    setTotalUsers,\r\n    setUsers,\r\n    switchIsButton,\r\n    switchIsFetching\r\n} from \"../../../../DataBases/Reducers/UserReducer\";\r\n\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        currentPage: state.usersReducer.currentPage,\r\n        pageCounts: state.usersReducer.pageCounts,\r\n        totalUsers: state.usersReducer.totalUsers,\r\n        pageSize: state.usersReducer.pageSize,\r\n        isFetching: state.usersReducer.isFetching,\r\n        pageButton: state.usersReducer.pageButton,\r\n        portionSize: 15\r\n    }\r\n};\r\n\r\n\r\nexport const PagesContainer = connect(mapStateToProps, {setPage, setUsers, switchIsButton, switchIsFetching})(Pages);\r\n","import React from \"react\";\r\nimport Spinner from '../../img/Preloaders/Spinner-1.4s-3a356a.svg';\r\nimport Preloaders from '../../CssModules/Preloader/Preloaders.module.css'\r\n\r\n\r\nfunction Preloader(props) {\r\n    return(\r\n        <div>\r\n            <img className={Preloaders.Preloader__position} src={Spinner}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n","import React, {useEffect} from \"react\";\r\nimport Content from \"../../../../CssModules/content.module.css\";\r\nimport UsersContainer from \"../UserDecor/FindFriendsContainer\";\r\nimport UserSearch from \"./usersSearch\";\r\nimport {PagesContainer} from \"./PagesButtons/pagesContainer\";\r\nimport Preloader from \"../../../Common/Preloader\";\r\nimport Preloaders from '../../../../CssModules/Preloader/Preloaders.module.css'\r\n\r\nfunction AllUsersClass (props) {\r\n\r\n    useEffect(() => {\r\n        props.getUsersThunk(props.state.pageSize, props.state.currentPage)\r\n    }, [props.state.users === 0])\r\n\r\n        return (\r\n            <div className={`${Content.content__menu_decorationBlocks} `}>\r\n                <UserSearch getUsersThunk={props.getUsersThunk} updateSearchText={props.updateSearchText} tempSearch={props.tempSearch}/>\r\n                <PagesContainer/>\r\n                {props.state.isFetching ? <Preloader className={Preloaders.Preloader__Opacity}/> : null}\r\n                {props.state.users.map(us => <UsersContainer\r\n                    key={us.id}\r\n                    id={us.id}\r\n                    avatar={us.photos.small}\r\n                    name={us.name}\r\n                    follow={us.followed}\r\n                />)}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default AllUsersClass\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport AllUsersClass from \"./allUsersClass\";\r\nimport {\r\n    getUsersThunk,\r\n    setTotalUsers,\r\n    setUsers,\r\n    switchIsButton,\r\n    switchIsFetching,\r\n    updateSearchText,\r\n} from \"../../../DataBases/Reducers/UserReducer\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.usersReducer,\r\n        tempSearch: state.usersReducer.tempSearch\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const AllUsersClassContainer = connect(mapStateToProps,\r\n    {setUsers, setTotalUsers, switchIsButton, switchIsFetching, getUsersThunk, updateSearchText})\r\n(AllUsersClass);\r\n\r\n","import React, {useCallback, useState} from 'react'\r\nimport ReactCrop from \"react-image-crop\";\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport {Modal} from \"../../../index\";\r\nimport Portal from \"../../../CssModules/portal.module.css\"\r\nimport AvaEdit from \"../../../CssModules/AvatarEditor/avatarEditor.module.css\"\r\n\r\n\r\nexport default function MyEditor(props) {\r\n    const [upImg, setUpImg] = useState();\r\n    const [imgRef, setImgRef] = useState(null);\r\n    const [crop, setCrop] = useState({unit: 'px', width: 300, height: 300});\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [previewLoad, setPreviewLoad] = useState(null)\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [disabled, setDisabled] = useState(false)\r\n    const onSelectFile = e => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () => setUpImg(reader.result));\r\n            reader.readAsDataURL(e.target.files[0]);\r\n            setPreviewLoad(e.target.files[0])\r\n            setEditMode(true)\r\n        }\r\n    };\r\n\r\n    const onLoad = useCallback(img => {\r\n        setImgRef(img);\r\n        setCrop({unit: 'px', width: 300, height: 300})\r\n    }, []);\r\n\r\n    const makeClientCrop = async crop => {\r\n        if (imgRef && crop.width && crop.height) {\r\n            createCropPreview(imgRef, crop, 'newFile.jpeg');\r\n        }\r\n    };\r\n\r\n    const createCropPreview = async (image, crop, fileName) => {\r\n        const canvas = document.createElement('canvas');\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        canvas.width = crop.width;\r\n        canvas.height = crop.height;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        ctx.drawImage(\r\n            image,\r\n            crop.x * scaleX,\r\n            crop.y * scaleY,\r\n            crop.width * scaleX,\r\n            crop.height * scaleY,\r\n            0,\r\n            0,\r\n            crop.width,\r\n            crop.height\r\n        );\r\n\r\n        return new Promise((resolve, reject) => {\r\n            canvas.toBlob(blob => {\r\n                if (!blob) {\r\n                    reject(new Error('Canvas is empty'));\r\n                    return;\r\n                }\r\n                blob.name = fileName;\r\n                let file = new File([blob], 'image.jpeg', [blob.type])\r\n                setPreviewLoad(file)\r\n                window.URL.revokeObjectURL(previewUrl);\r\n                setPreviewUrl(window.URL.createObjectURL(blob));\r\n            }, 'image/jpeg');\r\n\r\n        });\r\n    };\r\n    let uploadFile = async () => {\r\n        setDisabled(true)\r\n        let formData = new FormData();\r\n        formData.append('image', previewLoad);\r\n        await props.updatePhoto(formData, props.id)\r\n        clearImgData()\r\n    }\r\n    const clearImgData = () => {\r\n        setUpImg(null)\r\n        setPreviewLoad(null)\r\n        setPreviewUrl(null)\r\n        setEditMode(false)\r\n        setCrop({unit: 'px', width: 300, height: 300})\r\n        setDisabled(false)\r\n        document.getElementById('photo').value = ''\r\n    }\r\n    const buttonClasses = `${AvaEdit.avaEdit__button} ${AvaEdit.avaEdit_button__padding} ${AvaEdit.avaEdit_button__margin}`\r\n    return (\r\n        <div>\r\n            <div className={AvaEdit.fileUpload}>\r\n                <label>\r\n                    <input id={'photo'} type=\"file\" accept=\"image/*\" onChange={onSelectFile}/>\r\n                    <span>Change photo</span>\r\n                </label>\r\n            </div>\r\n            {editMode && <Modal>\r\n                <div className={Portal.modal}>\r\n                    <div className={Portal.cropImage__width}>\r\n                        <ReactCrop\r\n                            src={upImg}\r\n                            onImageLoaded={onLoad}\r\n                            crop={crop}\r\n                            onChange={c => setCrop(c)}\r\n                            onComplete={makeClientCrop}\r\n                            maxHeight={300}\r\n                            maxWidth={300}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <button\r\n                            disabled={disabled}\r\n                            className={`${buttonClasses} ${disabled && AvaEdit.avaEdit__buttonDisabled}`}\r\n                            onClick={uploadFile}\r\n                        >Load\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <button className={`${buttonClasses}`} onClick={() => clearImgData()}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Content from \"../../../CssModules/content.module.css\";\r\nimport emptyPhoto from '../../../img/Avatars/nullPhoto.jpg'\r\nimport AddButtonContainer from \"../../Friends/FindFriends/AddButton/addButtonContainer\";\r\nimport MyEditor from \"./AvatarEditor\";\r\nimport buttonsS from \"../../../CssModules/buttonsUnderAva.module.css\"\r\n\r\nfunction AvatarPhoto(props) {\r\n    const [avatar, setAvatar] = useState(props.avatar)\r\n    useEffect(() => {\r\n        setAvatar(props.avatar)\r\n    }, [props.avatar])\r\n    const startDialog = () => {\r\n        props.putNewDialogThunk({id: props.id, name: props.name, avatar: props.avatar})\r\n    }\r\n\r\n    const startDialogButtonClasses = `\r\n    ${Content.content__asideRightButton_decor} \r\n    ${Content.content__asideRightButtonPadding}\r\n    ${buttonsS.main_buttons__width}\r\n    `;\r\n    return (\r\n        <div className={`${Content.content__menu_decorationBlocks}`}>\r\n            <div className={`${Content.content__mainContentAvatar}`}>\r\n                <img className={`${Content.content__mainContentAvatar}`} src={avatar || emptyPhoto}/>\r\n            </div>\r\n            {\r\n                props.myProfile\r\n                    ?\r\n                    <div>\r\n                        <MyEditor\r\n                            updatePhoto={props.updatePhoto}\r\n                            id={props.id}\r\n                            uploadPhoto={props.uploadPhoto}\r\n                            updatePhotoSize={props.updatePhotoSize}\r\n                            tempPhoto={props.tempPhoto}\r\n                        />\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <div>\r\n                            <button className={`${startDialogButtonClasses}`} onClick={startDialog}>Start dialog\r\n                            </button>\r\n                        </div>\r\n                        <div>\r\n                            <AddButtonContainer id={props.id}\r\n                                                name={props.name}\r\n                                                followed={props.followed}\r\n                                                avatar={props.avatar}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AvatarPhoto\r\n","import React from \"react\";\r\nimport Pendalf from '../../../../img/Avatars/pendalf.jpg'\r\nimport Friends from '../../../../CssModules/Profile/FriendList/Friends.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction MyFriend(props) {\r\n    let setProfile = () => {\r\n        let meOrNot = props.id === props.myId ? 'me' : 'notMe'\r\n        props.setAnotherProfile(props.id, meOrNot)\r\n    }\r\n    return (\r\n        <div>\r\n            <NavLink onClick={setProfile} to={`/profile/${props.id}`}>\r\n                <div>\r\n                    <img className={`${Friends.margin} ${Friends.Friend__Ava}`} src={props.img}/>\r\n                </div>\r\n            </NavLink>\r\n            <p className={Friends.Friend__Font}>{props.name}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyFriend\r\n","import React from \"react\";\r\nimport Content from \"../../../CssModules/content.module.css\";\r\nimport Friends from \"../../../CssModules/Profile/FriendList/Friends.module.css\";\r\nimport Subscribe from '../../../CssModules/Profile/Subscribe/Subscribe.module.css'\r\nimport MyFriend from \"../FriendList/MyFriend/FriendLittleAva\";\r\nimport Groups from \"./Groups/SubscribeGroups\";\r\nimport Mordovia from '../../../img/Avatars/mordovia.jpg'\r\nimport Ali from '../../../img/Avatars/ali.png'\r\nimport Staff from '../../../img/Avatars/cat.jpeg'\r\n\r\nfunction Subscribes(props) {\r\n    let allSubs = props.subscribe.map( sub => <Groups key={sub.id} GroupName={sub.Name} Picture={sub.Avatar}/>);\r\n    return(\r\n        <div className={`${Content.content__menu_decorationBlocks}`}>\r\n            <p className={Subscribe.font__size}>My subscribes: <span>{allSubs.length}</span></p>\r\n            <div className={Subscribe.display__grid}>\r\n                {allSubs}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subscribes\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToRedirect = state => {\r\n    return {\r\n        isLogged: state.loginReducer.isLogged,\r\n        initialized: state.loginReducer.loadProfileData\r\n    }\r\n}\r\n\r\n\r\nexport const authRedirect = Component => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isLogged && this.props.initialized) return <Redirect to='/login'/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let connectedRedirect = connect(mapStateToRedirect)(RedirectComponent)\r\n\r\n    return connectedRedirect\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Field} from \"redux-form\";\r\nimport StatusS from \"../../../../CssModules/Profile/Status/statusStyles.module.css\"\r\n\r\nfunction StatusClass(props) {\r\n    const [mode, switchMode] = useState(false)\r\n    const [status, switchStatus] = useState(props.currentProfile.status)\r\n    const [disabled, setDisabled] = useState(false)\r\n    const buttonClasses = `${StatusS.status_button__decor} ${StatusS.status__buttonWidth} ${StatusS.status_button__padding} ${StatusS.status_button__margins}`\r\n    const containerButtonClass = `${StatusS.status_buttons__flex}`\r\n    const inputClasses = `${StatusS.status_input__decor} ${StatusS.status_input__padding}`\r\n\r\n    useEffect(() => {\r\n        switchStatus(props.currentProfile.status)\r\n    }, [props.currentProfile.status])\r\n\r\n    let onSubmit = async status => {\r\n        setDisabled(true)\r\n        await props.putStatusThunk(status.status)\r\n        setDisabled(false)\r\n        switchMode(false)\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                mode ?\r\n                <form onSubmit={props.handleSubmit(onSubmit)}>\r\n                    <div className={inputClasses}>\r\n                        <Field autoFocus\r\n                               name={'status'}\r\n                               component={'input'}\r\n                               type={'text'}\r\n                        />\r\n                    </div>\r\n                    <div className={containerButtonClass}>\r\n                        <div>\r\n                            <button disabled={disabled}\r\n                                    className={`${disabled && StatusS.status__buttonDisabled} ${buttonClasses}`}\r\n                            >Save</button>\r\n                        </div>\r\n                        <div>\r\n                            <button className={buttonClasses} onClick={() => switchMode(false)}>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                :\r\n                <h3 onClick={() => {if (props.myProfile) switchMode(true)}}>{status ? status : 'Change status'}</h3>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default StatusClass\r\n","import React from \"react\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {putStatusThunk} from \"../../../DataBases/Reducers/ProfileInfoReducer\";\r\nimport {authRedirect} from \"../../../Common/redirectToLogin\";\r\nimport StatusClass from \"./statusClass\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        currentProfile: state.profileInfoReducer.myProfile ?\r\n            state.profileInfoReducer.logged : state.profileInfoReducer.currentProfile,\r\n        myProfile: state.profileInfoReducer.myProfile\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const StatusClassContainer = compose(\r\n    connect(mapStateToProps, {putStatusThunk}),\r\n    authRedirect\r\n)(StatusClass)\r\n\r\nexport const ReduxStatusForm = reduxForm({ form: 'status', enableReinitialize : true})(StatusClassContainer);\r\n","import React, {useState} from \"react\";\r\nimport Content from \"../../../CssModules/content.module.css\";\r\nimport {ReduxStatusForm, StatusClassContainer} from \"./Status/statusClassContainer\";\r\nimport InfoS from \"../../../CssModules/Profile/MainInfo/mainInfo.module.css\"\r\n\r\nfunction MainInfo(props) {\r\n    const [more, setMore] = useState(false)\r\n    const keys = Object.keys(props.contacts)\r\n    const values = Object.values(props.contacts)\r\n    let index = 0\r\n    const containerClasses = `${InfoS.mainInfo_contacts__flexDisplay}`\r\n    const valueClasses = `${InfoS.mainInfo_value__margin} ${InfoS.mainInfo_value__width} ${InfoS.mainInfo_value__decor}`\r\n    const keyClasses = `${InfoS.mainInfo_key__width} ${InfoS.mainInfo_key__decor}`\r\n    const showMoreClasses = `${InfoS.mainInfo_showMore__decor}`\r\n    return (\r\n        <div>\r\n            <div className={`${Content.content__mainContentName} ${Content.content__menu_decorationBlocks}`}>\r\n                <h1>{`${props.name}`}</h1>\r\n                <ReduxStatusForm initialValues={{status: props.status}}/>\r\n            </div>\r\n            <div className={`${Content.content__menu_decorationBlocks}`}>\r\n                <div className={containerClasses}>\r\n                    <div className={keyClasses}><span>About me:</span></div>\r\n                    <div className={valueClasses}><span>{props.aboutMe}</span></div>\r\n                </div>\r\n                <div className={containerClasses}>\r\n                    <div className={keyClasses}><span>My skills:</span></div>\r\n                    <div className={valueClasses}><span>{props.skills}</span></div>\r\n                </div>\r\n                <div className={containerClasses}>\r\n                    <div className={keyClasses}><span>In searching:</span></div>\r\n                    <div className={valueClasses}><span>{props.search ? 'Yes' : 'No'}</span></div>\r\n                </div>\r\n                {!more &&\r\n                <div onClick={() => setMore(true)} className={showMoreClasses}><span>Show more information</span></div>}\r\n                {more &&\r\n                <div onClick={() => setMore(false)} className={showMoreClasses}><span>Hide more information</span>\r\n                </div>}\r\n                {more && keys.map(key => {\r\n                    return (\r\n                        <div className={containerClasses}>\r\n                            <div className={keyClasses}><span>{key[0].toUpperCase() + key.slice(1) + ':'}</span></div>\r\n                            <div className={valueClasses}><span>{values[index++]}</span></div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainInfo\r\n","import React from \"react\";\r\nimport Content from \"../../../CssModules/content.module.css\";\r\n\r\nfunction PostRedactor(props) {\r\n    let ref = React.createRef();\r\n    let setPostClick = () => {\r\n        let text = ref.current.value;\r\n        if (text){\r\n            props.setPost(props.currentProfile)\r\n        }\r\n    };\r\n\r\n    let setPostKeyPress = event => {\r\n        let text = ref.current.value;\r\n        if (text){\r\n            if (event.which === 13){\r\n                props.setPost(props.currentProfile);\r\n                event.preventDefault()\r\n            }\r\n        }\r\n    };\r\n\r\n    let currentText = () => {\r\n        let text = ref.current.value;\r\n        props.currentText(text)\r\n    };\r\n\r\n    return(\r\n        <div className={`${Content.content__menu_decorationBlocks}`}>\r\n            <div>\r\n                <textarea\r\n                    onChange={currentText}\r\n                    onKeyPress={setPostKeyPress}\r\n                    value={props.Temp}\r\n                    ref={ref}\r\n                    placeholder='Write anything...'\r\n                    className={`${Content.content__asideRightInput_decor}`}\r\n                />\r\n                <button\r\n                    onClick={setPostClick}\r\n                    className={`\r\n                    ${Content.content__asideRightButton_decor} \r\n                    ${Content.content__asideRightButtonPadding}\r\n                    `}\r\n                >Push me</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default PostRedactor\r\n","import React from \"react\";\r\nimport {postCreation, updatePostTextCreation} from \"../../DataBases/Reducers/PostsReducer\";\r\nimport PostRedactor from \"./postRedactor\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        Temp: state.postsReducer.Temp[0].PostRedactor,\r\n        currentProfile: state.profileInfoReducer.myProfile\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = dispatch => {\r\n    return{\r\n        currentText: text => {\r\n            dispatch(updatePostTextCreation(text))\r\n        },\r\n        setPost: currentProfile => {\r\n            dispatch(postCreation(currentProfile))\r\n        }\r\n    }\r\n};\r\n\r\nconst PostRedactorContainer = connect(mapStateToProps, mapDispatchToProps)(PostRedactor);\r\n\r\nexport default PostRedactorContainer\r\n","import React from \"react\";\r\nimport Posts from \"../../../CssModules/Profile/MyPosts/posts.module.css\";\r\nimport Content from \"../../../CssModules/content.module.css\";\r\nimport {deletePostCreation} from \"../../DataBases/Reducers/PostsReducer\";\r\n// import {deletePost} from \"../../DataBases/State/State\";\r\n\r\n\r\nconst NewPost = props => {\r\n    let setDeletePost = () => {\r\n        props.deletePost(props.id, props.current)\r\n    };\r\n    return(\r\n        <div className={`${Content.content__menu_decorationBlocks}`}>\r\n            <div className={`${Posts.display}`}>\r\n                <img className={Posts.image} src={props.pict}/>\r\n                <p className={`${Posts.name__marginLeft} ${Posts.name__Fonts}`}>{props.name}</p>\r\n                <button title='Delete post' onClick={setDeletePost} className={`${Posts.deleteButton__marginLeft} ${Posts.deleteButton__decor}`}>\r\n                    <span>&#10005;</span>\r\n                </button>\r\n            </div>\r\n            <div className={`${Posts.post__margins}`}>\r\n                <p className={`${Posts.mainDecor} ${Posts.borderBottom}`}>{props.text}</p>\r\n                <p className={Posts.likeMainDecor}>Like: <span>{props.likes}</span></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPost\r\n","import React from \"react\";\r\nimport NewPost from \"./post\";\r\n\r\n\r\nfunction PostsClass(props) {\r\n    let sortedPosts = props.posts\r\n        .map(elem => <NewPost\r\n            key={elem.id}\r\n            id={elem.id}\r\n            name={elem.name}\r\n            text={elem.text}\r\n            pict={elem.ava}\r\n            likes={elem.likes}\r\n            deletePost={props.deletePostCreation}\r\n            current={props.current}\r\n        />)\r\n        .reverse();\r\n    return (\r\n        <div>\r\n            {sortedPosts}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostsClass\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PostsClass from \"./postsClass\";\r\nimport {deletePostCreation} from \"../../DataBases/Reducers/PostsReducer\";\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        posts: state.profileInfoReducer.myProfile ? state.postsReducer.Posts : state.postsReducer.currentProfilePosts,\r\n        current: state.profileInfoReducer.myProfile\r\n    };\r\n\r\n};\r\n\r\nexport const PostsClassContainer = connect(mapStateToProps, {deletePostCreation})(PostsClass);\r\n","import React from \"react\";\r\nimport Content from \"../../../CssModules/content.module.css\";\r\nimport Friends from '../../../CssModules/Profile/FriendList/Friends.module.css';\r\nimport MyFriend from \"./MyFriend/FriendLittleAva\";\r\n\r\n\r\nfunction FriendList(props) {\r\n    let allFriends = () => {\r\n        let all = [];\r\n        let array = props.friends;\r\n        let shuffledArray = array.sort(() => Math.random() - 0.5);\r\n        for (let i = 0; i < Math.min(array.length, 6); i++){\r\n            all.push(array[i])\r\n        }\r\n        return all.map(friend => <MyFriend myId={props.myId} setAnotherProfile={props.setAnotherProfile} id={friend.id} key={friend.id} name={friend.name} img={friend.avatar}/>)\r\n    };\r\n    return(\r\n        <div className={`${Content.content__menu_decorationBlocks}`}>\r\n            <p className={Friends.font__size}>My friends: <span>{props.friends.length}</span></p>\r\n            <div className={Friends.display__grid}>\r\n                {allFriends()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendList\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {setAnotherProfile} from \"../../DataBases/Reducers/ProfileInfoReducer\";\r\nimport FriendList from \"./Friend\";\r\n\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        friends: state.friendsReducer.friends,\r\n        myId: state.profileInfoReducer.currentProfile.userId\r\n    }\r\n}\r\n\r\n\r\nexport const FriendListContainer = connect(mapStateToProps, {setAnotherProfile})(FriendList)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Displays from \"../../../CssModules/DisplayView.module.css\";\r\nimport AvatarPhoto from \"../Avatar/Avatar\";\r\nimport Subscribes from \"../Subscribes/SubscribeList\";\r\nimport MainInfo from \"../MainInfo/nameAndAbout\";\r\nimport PostRedactorContainer from \"../PostRedactor/PostRedactorContainer\";\r\nimport {PostsClassContainer} from \"../MyPosts/postsClassContainer\";\r\nimport Preloader from \"../../Common/Preloader\";\r\nimport {FriendListContainer} from \"../FriendList/friendContainer\";\r\n\r\n\r\nfunction ProfileCenterInfoClass(props) {\r\n    let [follow, setFollow] = useState(props.followed)\r\n    let [fetch, setFetch] = useState(props.isFetching)\r\n\r\n    useEffect(() => {\r\n        setFollow(props.followed)\r\n    }, [props.followed])\r\n\r\n    useEffect(() => {\r\n        setFetch(props.isFetching)\r\n    }, [props.isFetching])\r\n\r\n    if (fetch) return <Preloader/>\r\n    return (\r\n        <div>\r\n            <div className={Displays.inside_ContentProfile__displayFlex}>\r\n                <div className={Displays.inside_ProfileCenter__FlexProportion}>\r\n                    <AvatarPhoto\r\n                        avatar={props.currentProfile.photos.large}\r\n                        updatePhoto={props.postProfilePhotoThunk}\r\n                        id={props.currentProfile.userId}\r\n                        name={props.currentProfile.fullName}\r\n                        myProfile={props.myProfile}\r\n                        putNewDialogThunk={props.putNewDialogThunk}\r\n                        followed={follow}\r\n                        uploadPhoto={props.uploadPhoto}\r\n                        updatePhotoSize={props.updatePhotoSize}\r\n                        tempPhoto={props.tempPhoto}\r\n                    />\r\n                    {props.myProfile && <FriendListContainer/>}\r\n                    {/*{props.myProfile && <Subscribes subscribe={props.subscribe}/>}*/}\r\n                </div>\r\n                <div className={Displays.inside_ProfileRight__FlexProportion}>\r\n                    <MainInfo\r\n                        name={props.currentProfile.fullName}\r\n                        status={props.currentProfile.status}\r\n                        aboutMe={props.currentProfile.aboutMe}\r\n                        skills={props.currentProfile.lookingForAJobDescription}\r\n                        search={props.currentProfile.lookingForAJob}\r\n                        contacts={props.currentProfile.contacts}\r\n                    />\r\n                    {props.myProfile && <PostRedactorContainer/>}\r\n                    {props.myProfile && <PostsClassContainer/>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileCenterInfoClass\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfile,\r\n    postProfilePhotoThunk,\r\n} from \"../../DataBases/Reducers/ProfileInfoReducer\";\r\nimport ProfileCenterInfoClass from \"./ProfileCenterInfoClass\";\r\nimport {authRedirect} from \"../../Common/redirectToLogin\";\r\nimport {compose} from \"redux\";\r\nimport {putNewDialogThunk} from \"../../DataBases/Reducers/MessagesReducer\";\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        currentProfile: state.profileInfoReducer.myProfile ?\r\n            state.profileInfoReducer.logged : state.profileInfoReducer.currentProfile,\r\n        myProfilePosts: state.postsReducer.Posts,\r\n        isFetching: state.usersReducer.isFetching,\r\n        myProfile: state.profileInfoReducer.myProfile,\r\n        followed: state.profileInfoReducer.followed,\r\n        subscribe: state.subscribesReducer\r\n    }\r\n};\r\n\r\n\r\nexport const ProfileCenterInfoClassContainer = compose(\r\n    connect(mapStateToProps, {getProfile, postProfilePhotoThunk, putNewDialogThunk}),\r\n    authRedirect\r\n)(ProfileCenterInfoClass)\r\n","const validate = values => {\r\n    const errors = {}\r\n    if (!values.email) {\r\n        errors.email = 'Required'\r\n    }\r\n    if (!values.password) {\r\n        errors.password = 'Required'\r\n    }\r\n    return errors\r\n}\r\n\r\nexport default validate\r\n\r\n\r\n\r\n\r\n\r\n","const sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nconst asyncValidate = (values /*, dispatch */) => {\r\n    return sleep(1000).then(() => {\r\n        // simulate server latency\r\n        if (['john', 'paul', 'george', 'ringo'].includes(values.username)) {\r\n            throw { username: 'That username is taken' }\r\n        }\r\n    })\r\n}\r\n\r\nexport default asyncValidate\r\n","import React from \"react\";\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nexport const CreateFieldForm = ({name, type, component, label, text = '', props = {}, validators = []}) => {\r\n    return (\r\n        <div>\r\n            <span>{text}</span>\r\n            <div>\r\n                <Field\r\n                    name={name}\r\n                    type={type}\r\n                    component={component}\r\n                    label={label}\r\n                    validate={validators}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {CreateFieldForm} from \"../../../Common/createFieldForm\";\r\nimport {renderField} from \"../../../Validations/LoginValidate/loginAsyncForm\";\r\nimport settingsS from \"../../../../CssModules/Settings/settingsStyles.module.css\";\r\n\r\n\r\nfunction EmailField(props) {\r\n    const containerClasses = `${settingsS.settings_container__flex} ${settingsS.settings_container__margin}`\r\n    const paramClasses = `${settingsS.settings_param__decor}`\r\n    const inputClasses = `${settingsS.settings_input__decor} ${settingsS.settings_input__padding} ${settingsS.settings_input__margins}`\r\n    return (\r\n        <div className={containerClasses}>\r\n            <div className={paramClasses}>\r\n                <span>Email:</span>\r\n            </div>\r\n            <div className={inputClasses}>\r\n                {CreateFieldForm({\r\n                    name: 'email',\r\n                    type: 'text',\r\n                    component: renderField('input'),\r\n                    label: 'Email'\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmailField","import React from \"react\";\r\nimport {CreateFieldForm} from \"../../../Common/createFieldForm\";\r\nimport {renderField} from \"../../../Validations/LoginValidate/loginAsyncForm\";\r\nimport settingsS from \"../../../../CssModules/Settings/settingsStyles.module.css\";\r\n\r\n\r\nfunction PasswordField(props) {\r\n    const containerClasses = `${settingsS.settings_container__flex} ${settingsS.settings_container__margin}`\r\n    const paramClasses = `${settingsS.settings_param__decor}`\r\n    const inputClasses = `${settingsS.settings_input__decor} ${settingsS.settings_input__padding} ${settingsS.settings_input__margins}`\r\n    return (\r\n        <div className={containerClasses}>\r\n            <div className={paramClasses}>\r\n                <span>Password:</span>\r\n            </div>\r\n            <div className={inputClasses}>\r\n                {CreateFieldForm({\r\n                    name: 'password',\r\n                    type: 'password',\r\n                    component: renderField('input'),\r\n                    label: 'Password'\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasswordField","import React from \"react\";\r\nimport {CreateFieldForm} from \"../../../Common/createFieldForm\";\r\nimport {renderField} from \"../../../Validations/LoginValidate/loginAsyncForm\";\r\nimport settingsS from \"../../../../CssModules/Settings/settingsStyles.module.css\";\r\n\r\n\r\nfunction RememberMe(props) {\r\n    const containerClasses = `${settingsS.settings_container__flex} ${settingsS.settings_container__margin}`\r\n    const paramClasses = `${settingsS.settings_param__decor}`\r\n    const inputClasses = `${settingsS.settings_checkbox}`\r\n    return (\r\n        <div className={containerClasses}>\r\n            <div className={paramClasses}>\r\n                <span>Remember me:</span>\r\n            </div>\r\n            <div className={inputClasses}>\r\n                {CreateFieldForm({\r\n                    name: 'remember',\r\n                    type: 'checkbox',\r\n                    component: renderField('input'),\r\n                    label: 'Remember me'\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RememberMe","import React from \"react\";\r\nimport {CreateFieldForm} from \"../../../Common/createFieldForm\";\r\nimport {renderField} from \"../../../Validations/LoginValidate/loginAsyncForm\";\r\nimport settingsS from \"../../../../CssModules/Settings/settingsStyles.module.css\";\r\nimport loginS from \"../../../../CssModules/Login/loginStyles.module.css\"\r\n\r\n\r\nfunction CaptchaField(props) {\r\n    const containerClasses = `${loginS.captcha_container__block}`\r\n    const captchaImgClasses = `${loginS.captcha_img__decor}`\r\n    const inputClasses = `${settingsS.settings_input__decor} ${settingsS.settings_input__padding} ${settingsS.settings_input__margins}`\r\n    const blockClasses = `${loginS.captcha_block__margin}`\r\n    return (\r\n        <div className={containerClasses}>\r\n            <div className={blockClasses}>\r\n                {props.captcha && <img className={captchaImgClasses} src={props.captcha}/>}\r\n            </div>\r\n            <div className={blockClasses}>\r\n                <div className={`${inputClasses}`}>\r\n                    {props.captcha && CreateFieldForm({\r\n                        name: 'captcha',\r\n                        type: 'text',\r\n                        component: renderField('input'),\r\n                        label: 'Captcha'\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CaptchaField","import React from 'react'\r\nimport {reduxForm} from 'redux-form'\r\nimport validate from './loginValidateSync'\r\nimport asyncValidate from './loginValidateAsync'\r\nimport Content from \"../../../CssModules/content.module.css\";\r\nimport EmailField from \"../../UpperMenu/Login/LoginPage/email\";\r\nimport PasswordField from \"../../UpperMenu/Login/LoginPage/password\";\r\nimport RememberMe from \"../../UpperMenu/Login/LoginPage/rememberMe\";\r\nimport settingsS from \"../../../CssModules/Settings/settingsStyles.module.css\";\r\nimport CaptchaField from \"../../UpperMenu/Login/LoginPage/captcha\";\r\nimport loginS from \"../../../CssModules/Login/loginStyles.module.css\"\r\nimport ErrorSVG from \"../../../img/fail-1.1s-128px.svg\"\r\n\r\nexport const renderField = Component => ({input, label, type, meta: {asyncValidating, touched, error}}) => (\r\n    <div>\r\n        <div className={asyncValidating ? 'async-validating' : ''}>\r\n            <Component {...input} type={type} placeholder={label}/>\r\n            {touched && error && <span>{error}</span>}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst AsyncValidationForm = props => {\r\n    const {handleSubmit, pristine, reset, submitting} = props\r\n    let onSubmit = formData => {\r\n        props.logThunk(formData.email, formData.password, formData.remember, formData.captcha)\r\n    };\r\n    const containerClasses = `${settingsS.settings_container__flex} ${settingsS.settings_container__margin}`\r\n    const buttonClasses = `${settingsS.settings__button} ${settingsS.settings__buttonWidth} ${settingsS.settings_button__padding}`\r\n    const errorClass = `${loginS.captcha_error__decor}`\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className={`${Content.content__menu_decorationBlocks}`}>\r\n                <EmailField/>\r\n                <PasswordField/>\r\n                <RememberMe/>\r\n                <CaptchaField captcha={props.captcha}/>\r\n                {props.error &&\r\n                <div className={`${containerClasses}`}>\r\n                    <div className={`${errorClass} ${containerClasses}`}>\r\n                        <div><img src={ErrorSVG}/></div>\r\n                        <div className={`${loginS.captcha_errorText__margin}`}>\r\n                            <span>{props.error}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n                <div className={containerClasses}>\r\n                    <button disabled={props.buttonRequest}\r\n                            className={`${buttonClasses} ${props.buttonRequest && settingsS.settings__buttonDisabled}`}\r\n                            type=\"submit\"\r\n                    >\r\n                        Sign Up\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'asyncValidation', // a unique identifier for this form\r\n    validate,\r\n    asyncValidate,\r\n    asyncBlurFields: ['email'],\r\n})(AsyncValidationForm)\r\n\r\n\r\n","import React from \"react\";\r\nimport Person from \"../../../../CssModules/UpperMenu/UpperMenu.module.css\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AsyncValidationForm from \"../../../Validations/LoginValidate/loginAsyncForm\";\r\n\r\n\r\nfunction LoginPage(props) {\r\n    let buttonLoginClasses =\r\n        `\r\n    ${Person.log__padding}\r\n    ${Person.log__button} \r\n    `;\r\n    if (props.isLogged && props.initialized) return <Redirect to='/profile'/>;\r\n    return (\r\n        <div>\r\n            <AsyncValidationForm\r\n                buttonRequest={props.buttonRequest}\r\n                logThunk={props.postLogThunk}\r\n                class={buttonLoginClasses}\r\n                captcha={props.captcha}\r\n                initialValues={{'remember': false}}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default LoginPage\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    loginRequest,\r\n    postLogThunk,\r\n    logData\r\n} from \"../../../DataBases/Reducers/LoginReducer\";\r\nimport LoginPage from \"./LoginPage\";\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        buttonRequest: state.loginReducer.buttonRequest,\r\n        captcha: state.loginReducer.captcha,\r\n        isLogged: state.loginReducer.isLogged,\r\n        initialized: state.loginReducer.loadProfileData\r\n    }\r\n};\r\n\r\n\r\nexport const LoginReduxForm = connect(mapStateToProps,\r\n    {\r\n        loginRequest, logData, postLogThunk\r\n    },\r\n)(LoginPage)\r\n\r\n","import React from \"react\";\r\nimport {Field} from \"redux-form\";\r\nimport {CreateFieldForm} from \"../../Common/createFieldForm\";\r\nimport {renderField} from \"../../Validations/LoginValidate/loginAsyncForm\";\r\nimport settingsS from \"../../../CssModules/Settings/settingsStyles.module.css\";\r\n\r\n\r\nfunction ChangeAboutMe(props) {\r\n    const containerClasses = `${settingsS.settings_container__flex} ${settingsS.settings_container__margin}`\r\n    const paramClasses = `${settingsS.settings_param__decor}`\r\n    const inputClasses = `${settingsS.settings_input__decor} ${settingsS.settings_input__padding} ${settingsS.settings_input__margins}`\r\n    return (\r\n        <div className={containerClasses}>\r\n            <div className={paramClasses}>\r\n                <span>About me:</span>\r\n            </div>\r\n            <div className={inputClasses}>\r\n                {CreateFieldForm(\r\n                    {\r\n                        name: 'aboutMe',\r\n                        type: 'text',\r\n                        component: renderField('textarea'),\r\n                        label: 'Tell about yourself',\r\n                    }\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangeAboutMe\r\n","import React from \"react\";\r\nimport {CreateFieldForm} from \"../../Common/createFieldForm\";\r\nimport {renderField} from \"../../Validations/LoginValidate/loginAsyncForm\";\r\nimport settingsS from \"../../../CssModules/Settings/settingsStyles.module.css\"\r\n\r\n\r\nfunction ChangeContacts(props) {\r\n    const containerClasses = `${settingsS.settings_container__flex} ${settingsS.settings_container__margin}`\r\n    const paramClasses = `${settingsS.settings_param__decor}`\r\n    const inputClasses = `${settingsS.settings_input__decor} ${settingsS.settings_input__padding} ${settingsS.settings_input__margins}`\r\n    return (\r\n        <div>\r\n            {Object.keys(props.contacts).map(key => {\r\n                return (\r\n                    <div key={key} className={containerClasses}>\r\n                        <div className={paramClasses}>\r\n                            <span>\r\n                                {key[0].toUpperCase() + key.slice(1) + ':'}\r\n                            </span>\r\n                        </div>\r\n                        <div className={inputClasses}>\r\n                            {CreateFieldForm({\r\n                                name: `contacts.${key}`,\r\n                                type: 'text',\r\n                                component: renderField('input'),\r\n                                label: `Your ${key} link`\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangeContacts\r\n","import React from \"react\";\r\n\r\n\r\nconst validate = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport default validate\r\n","import React from \"react\";\r\nimport {Field} from \"redux-form\";\r\nimport {CreateFieldForm} from \"../../Common/createFieldForm\";\r\nimport {renderField} from \"../../Validations/LoginValidate/loginAsyncForm\";\r\nimport validate from \"../../Common/validator\";\r\nimport settingsS from \"../../../CssModules/Settings/settingsStyles.module.css\";\r\n\r\n\r\nlet required = validate('lookingForAJobDescription')\r\n\r\nfunction ChangeLookJob(props) {\r\n    const containerClasses = `${settingsS.settings_container__flex} ${settingsS.settings_container__margin}`\r\n    const paramClasses = `${settingsS.settings_param__decor}`\r\n    const inputClasses = `${settingsS.settings_input__decor} ${settingsS.settings_input__padding} ${settingsS.settings_input__margins}`\r\n    const checkBoxClasses = `${settingsS.settings_checkbox}`\r\n    return (\r\n        <div>\r\n            <div className={containerClasses}>\r\n                <div className={paramClasses}>\r\n                    <span>My skills:</span>\r\n                </div>\r\n                <div className={inputClasses}>\r\n                    {CreateFieldForm(\r\n                        {\r\n                            name: 'lookingForAJobDescription',\r\n                            type: 'text',\r\n                            component: renderField('textarea'),\r\n                            validators: [validate]\r\n                        }\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className={containerClasses}>\r\n                <div className={paramClasses}>\r\n                    <span>Looking for job:</span>\r\n                </div>\r\n                <div className={checkBoxClasses}>\r\n                    {CreateFieldForm(\r\n                        {\r\n                            name: 'lookingForAJob',\r\n                            type: 'checkbox',\r\n                            component: renderField('input'),\r\n                        }\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangeLookJob\r\n","import React, {useState} from \"react\";\r\nimport {Field} from \"redux-form\";\r\nimport {CreateFieldForm} from \"../../Common/createFieldForm\";\r\nimport {renderField} from \"../../Validations/LoginValidate/loginAsyncForm\";\r\nimport settingsS from \"../../../CssModules/Settings/settingsStyles.module.css\";\r\n\r\n\r\nfunction ChangeName(props) {\r\n    const containerClasses = `${settingsS.settings_container__flex} ${settingsS.settings_container__margin}`\r\n    const paramClasses = `${settingsS.settings_param__decor}`\r\n    const inputClasses = `${settingsS.settings_input__decor} ${settingsS.settings_input__padding} ${settingsS.settings_input__margins}`\r\n    return (\r\n        <div className={containerClasses}>\r\n            <div className={paramClasses}>\r\n                <span>Name:</span>\r\n            </div>\r\n            <div className={inputClasses}>\r\n                {CreateFieldForm(\r\n                    {\r\n                        name: 'fullName',\r\n                        type: 'text',\r\n                        component: renderField('input'),\r\n                        label: 'What is your name ?',\r\n                    }\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ChangeName\r\n","import React, {useState} from \"react\";\r\nimport ChangeAboutMe from \"./ChangeAboutMe/changeAboutMe\";\r\nimport ChangeContacts from \"./ChangeContacts/changeContacts\";\r\nimport ChangeLookJob from \"./ChangeLookJob/changeLookJob\";\r\nimport ChangeName from \"./Ð¡hangeName/changeNameClass\";\r\nimport settingsS from \"../../CssModules/Settings/settingsStyles.module.css\"\r\nimport Content from \"../../CssModules/content.module.css\";\r\n\r\nfunction Settings(props) {\r\n    let onSubmit = async data => {\r\n        setDisabled(true)\r\n        await props.putProfileInfoThunk(data, props.id)\r\n        setDisabled(false)\r\n    }\r\n    const [disabled, setDisabled] = useState(false)\r\n    const buttonClasses = `${settingsS.settings__button} ${settingsS.settings__buttonWidth} ${settingsS.settings_button__padding}`\r\n    const containerClasses = `${settingsS.settings_container__flex} ${settingsS.settings_container__margin}`\r\n    return(\r\n        <div className={`${Content.content__menu_decorationBlocks}`}>\r\n            <form onSubmit={props.handleSubmit(onSubmit)}>\r\n                <ChangeName/>\r\n                <ChangeContacts contacts={props.contacts}/>\r\n                <ChangeAboutMe/>\r\n                <ChangeLookJob/>\r\n                <div className={containerClasses}>\r\n                    <button disabled={disabled} className={`${buttonClasses} ${disabled && settingsS.settings__buttonDisabled}`}>Save</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Settings\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Settings from \"./settings\";\r\nimport {putProfileInfoThunk} from \"../DataBases/Reducers/ProfileInfoReducer\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {compose} from \"redux\";\r\nimport {authRedirect} from \"../Common/redirectToLogin\";\r\nimport validate from \"../Common/validator\";\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        id: state.profileInfoReducer.logged.userId,\r\n        initialValues: state.profileInfoReducer.logged,\r\n        contacts: state.profileInfoReducer.logged.contacts\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const SettingsForm = compose(\r\n    connect(mapStateToProps, {putProfileInfoThunk}),\r\n    reduxForm({ form: 'settings', enableReinitialize : true}),\r\n    authRedirect\r\n)(Settings)\r\n","import React from \"react\";\r\nimport Person from \"../../../../CssModules/Dialog/PersonDialog.module.css\";\r\nimport Posts from \"../../../../CssModules/Profile/MyPosts/posts.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Message(props) {\r\n    let setDeleteMessage = () => {\r\n        props.deleteMessage(props.mesId, props.id )\r\n    };\r\n    let throwToProfile = () => {\r\n        let meOrNot = props.senderId === props.myId ? 'me' : 'notMe'\r\n        props.setAnotherProfile(props.senderId, meOrNot)\r\n    }\r\n    return(\r\n        <div className={`${!props.viewed && Person.dialog_viewedMessages__color}`}>\r\n            <div className={Person.dialog__flex}>\r\n                <NavLink onClick={throwToProfile} to={`/profile/${props.senderId}`} className={`${Person.dialog_name__margin}`}>\r\n                    <img className={Person.dialog_img} src={props.avatars}/>\r\n                </NavLink>\r\n                <div className={`${Person.dialog_name} ${Person.dialog_name__margin}`}>\r\n                    <p>{props.who}</p>\r\n                </div>\r\n                <div className={`${Person.dialog_time} ${Person.dialog_name__margin}`}>\r\n                    <p>{props.date}</p>\r\n                </div>\r\n                <div className={`${Person.deleteButton__marginLeft}`}>\r\n                    <button onClick={setDeleteMessage} className={` ${Posts.deleteButton__decor}`}><span>&#10005;</span></button>\r\n                </div>\r\n            </div>\r\n            <div className={`${Person.message__marginLeft} ${Person.message__containerSize}`}>\r\n                <p className={`${Person.message__marginTop}`}>{props.message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from \"react\";\r\nimport Person from \"../../../../CssModules/Dialog/PersonDialog.module.css\";\r\n\r\nfunction Upper(props) {\r\n    // debugger\r\n    return(\r\n        <div className={`${Person.upper__border}  ${Person.upper__marginBottom}`}>\r\n            <p className={`\r\n            ${Person.upper__font} \r\n            ${Person.upper_text__margin} \r\n            ${Person.upper_text__padding}\r\n            `}\r\n            >\r\n                {`${props.state.messageReducer.Dialogs[props.id].userName}`}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upper\r\n","import React from \"react\";\r\nimport Person from \"../../../../../CssModules/Dialog/PersonDialog.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nfunction Input(props) {\r\n    let ref = React.createRef();\r\n    let post = event => {\r\n        let text = ref.current.value;\r\n        if (event.which === 13) {\r\n            props.postMessageThunk(props.id, text, props.me)\r\n            ref.current.value = ''\r\n        }\r\n    }\r\n\r\n    let currentText = () => {\r\n        let text = ref.current.value;\r\n        props.currentText(text, props.index)\r\n    };\r\n    return(\r\n        <div className={`${Person.input__margins} ${Person.input__borderTop} ${Person.input__decor}`}>\r\n            <input\r\n                onChange={currentText}\r\n                onKeyPress={post}\r\n                value={props.Temp}\r\n                ref={ref}\r\n                className={Person.inputField__border}\r\n                placeholder='Your message'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React from \"react\";\r\nimport {postMessageThunk, updateMessageCreation} from \"../../../../DataBases/Reducers/MessagesReducer\";\r\nimport Input from \"./DialogInput\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\n\r\nlet mapStateToProps = (state, props)  => {\r\n    let dialogId = props.loc;\r\n    let index;\r\n    for (let i = 0; i < state.messageReducer.Dialogs.length; i++){\r\n        if (dialogId === state.messageReducer.Dialogs[i].id){\r\n            index = i\r\n        }\r\n    }\r\n    return {\r\n        Temp: state.messageReducer.Dialogs[index].Temp,\r\n        id: dialogId,\r\n        index,\r\n        me: state.profileInfoReducer.logged\r\n\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = dispatch => {\r\n    return {\r\n        currentText: (text, id) => {\r\n            dispatch(updateMessageCreation(text, id));\r\n        },\r\n        postMessageThunk: (id, message, me) => {\r\n            dispatch(postMessageThunk(id, message, me))\r\n        }\r\n    }\r\n};\r\n\r\nconst InputContainer = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(Input);\r\n\r\n\r\nexport default InputContainer\r\n","import React, {useEffect} from \"react\";\r\nimport Content from '../../../../CssModules/content.module.css';\r\nimport Person from '../../../../CssModules/Dialog/PersonDialog.module.css'\r\nimport Message from \"./DialogMessage\";\r\nimport Upper from \"./DialogUpper\";\r\nimport InputContainer from \"./DialogInput/DialogInputContainer\";\r\nimport Preloader from \"../../../Common/Preloader\";\r\n\r\nfunction DialogPage(props) {\r\n    let loc = Number(props.match.params.userID);\r\n    useEffect(() => {\r\n        props.getUserAllMessagesThunk(loc, props.state.profileInfoReducer.logged)\r\n    }, [props.state.messageReducer.Dialogs.length === 0])\r\n    let currentMessages = [];\r\n    let index = 0;\r\n    for (let i = 0; i < props.state.messageReducer.Dialogs.length; i++){\r\n        if (loc === props.state.messageReducer.Dialogs[i].id){\r\n            currentMessages = props.state.messageReducer.Dialogs[i].Messages\r\n            index = i\r\n        }\r\n    }\r\n    let allDialog = currentMessages.map( mes => <Message\r\n        key={mes.id}\r\n        id={props.state.messageReducer.Dialogs[index].id}\r\n        mesId={mes.id}\r\n        viewed={mes.viewed}\r\n        senderId={mes.senderId}\r\n        avatars={mes.Avatar}\r\n        message={mes.body}\r\n        who={mes.senderName}\r\n        date={mes.addedAt}\r\n        deleteMessage={props.deleteMessageThunk}\r\n        setAnotherProfile={props.setAnotherProfile}\r\n        myId={props.myId}\r\n    />)\r\n\r\n    if(props.isFetching) return <Preloader/>\r\n    return(\r\n        <div>\r\n            <div className={`${Content.content__menu_decorationBlocks} ${Person.paddingOff}`}>\r\n                <Upper id={index}\r\n                       state={props.state}\r\n                />\r\n                <div className={`${Person.container}`}>\r\n                    {allDialog}\r\n                </div>\r\n                <InputContainer loc={loc}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogPage\r\n","import React from \"react\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, postProfilePhotoThunk, setAnotherProfile} from \"../../../DataBases/Reducers/ProfileInfoReducer\";\r\nimport {\r\n    deleteMessageThunk,\r\n    getUserAllMessagesThunk,\r\n    putNewDialogThunk\r\n} from \"../../../DataBases/Reducers/MessagesReducer\";\r\nimport {authRedirect} from \"../../../Common/redirectToLogin\";\r\nimport DialogPage from \"./DialogPage\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        state,\r\n        isFetching: state.usersReducer.isFetching,\r\n        myId: state.profileInfoReducer.logged.userId\r\n    }\r\n}\r\n\r\n\r\nexport const DialogPageContainer =\r\n    compose\r\n    (\r\n        connect(mapStateToProps,\r\n            {getProfile, postProfilePhotoThunk, putNewDialogThunk, deleteMessageThunk, setAnotherProfile,getUserAllMessagesThunk}),\r\n        withRouter,\r\n        authRedirect\r\n    )(DialogPage)\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Dialog from \"../../../../CssModules/Dialog/DialogFriend.module.css\";\r\nimport Friend from \"../../../../CssModules/Profile/FriendList/Friends.module.css\";\r\n\r\nfunction MiniDialogs(props) {\r\n    let get = () => {\r\n        props.getDialogs(props.id, props.me)\r\n    }\r\n\r\n    return (\r\n        <div className={`${props.newMess && Dialog.dialog_containerViewMessages}`} onClick={get}>\r\n            <NavLink to={'/dialog/' + props.id}\r\n                     className={`${Dialog.display__flex} ${Dialog.hover__decor} ${Dialog.NavLinks__fontsDecor}`}>\r\n                <div>\r\n                    <img className={`${Friend.Friend__Ava} ${Dialog.display__AvaPosition}`} src={props.img}/>\r\n                </div>\r\n                <div className={Dialog.border__borderBottom}>\r\n                    <p className={`${Dialog.text__NameFontsDecor}`}>{props.name}</p>\r\n                    <p className={`${Dialog.text__NameFontsDecor}`}>{props.newMess > 0 && ' +' + props.newMess}</p>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MiniDialogs\r\n","import React from \"react\";\r\nimport coon from \"../../img/NoResultSearch/coon.jpg\"\r\nimport ResultS from \"../../CssModules/NoResultSearch/resultStyles.module.css\"\r\n\r\nfunction NoResultSearch(props) {\r\n    const imgClasses = `${ResultS.noResult_img__decor} ${ResultS.noResult_img__width}`\r\n    return (\r\n        <div>\r\n            <div className={ResultS.noResult_text__decor}>\r\n                <span>We haven't found anything, but we've already sent our agent to punish the culprit</span>\r\n            </div>\r\n            <div className={ResultS.noResult_img__margin}>\r\n                <img className={imgClasses} src={coon}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NoResultSearch\r\n","import React from \"react\";\r\nimport MiniDialogs from \"./MiniDialogs/DialogsMini\";\r\nimport NoResultSearch from \"../../Common/NoResultSearch\";\r\n\r\n\r\nfunction DialogLists(props) {\r\n    let dialogsData\r\n    let pattern = new RegExp(props.tempSearch, ['giy']);\r\n    dialogsData = props.dialogs\r\n        .map(dialog => {\r\n                if (props.tempSearch.length === 0 || dialog.userName.match(pattern)) {\r\n                    return <MiniDialogs\r\n                        key={dialog.id}\r\n                        id={dialog.id}\r\n                        name={dialog.userName}\r\n                        img={dialog.photos.large}\r\n                        newMess={dialog.newMessagesCount}\r\n                        getDialogs={props.getUserAllMessagesThunk}\r\n                        me={props.me}\r\n                    />\r\n                }\r\n            }\r\n        );\r\n    for (let i = 0; i < dialogsData.length; i++) {\r\n        if (dialogsData[i]) return (<div>{dialogsData}</div>)\r\n    }\r\n    return (\r\n        <div>\r\n            <NoResultSearch/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogLists\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport DialogLists from \"./DialogList\";\r\nimport {getUserAllMessagesThunk} from \"../../DataBases/Reducers/MessagesReducer\";\r\nimport {authRedirect} from \"../../Common/redirectToLogin\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        dialogs: state.messageReducer.Dialogs,\r\n        me: state.profileInfoReducer.logged,\r\n        tempSearch: state.messageReducer.tempSearch\r\n    }\r\n}\r\n\r\n\r\nexport const DialogsListContainer = compose(\r\n    connect(mapStateToProps, {getUserAllMessagesThunk}),\r\n    authRedirect\r\n)(DialogLists)\r\n","import React from \"react\";\r\nimport Content from \"../../../CssModules/content.module.css\";\r\nimport Dialog from '../../../CssModules/Dialog/DialogFriend.module.css';\r\nimport {DialogsListContainer} from \"./DialogListContainer\";\r\n\r\n\r\nfunction Dialogs(props) {\r\n    let temp = React.createRef();\r\n    let currentText = () => {\r\n        let text = temp.current.value;\r\n        props.updateSearchText(text)\r\n    };\r\n    return (\r\n        <div className={`${Content.content__menu_decorationBlocks}`}>\r\n            <div>\r\n                <input className={`${Dialog.input__width} ${Dialog.input__decor} ${Dialog.input__padding}`}\r\n                       placeholder='Search'\r\n                       ref={temp}\r\n                       value={props.tempSearch}\r\n                       onChange={currentText}\r\n                />\r\n            </div>\r\n            <div>\r\n                <DialogsListContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {updateSearchText} from \"../../DataBases/Reducers/MessagesReducer\";\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        tempSearch: state.messageReducer.tempSearch\r\n    }\r\n}\r\n\r\n\r\nexport const DialogContainer = connect(mapStateToProps, {updateSearchText})(Dialogs)\r\n","import React from \"react\";\r\nimport Friends from '../../../CssModules/Friends/Friends.module.css'\r\nimport Dialog from \"../../../CssModules/Dialog/DialogFriend.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Content from \"../../../CssModules/content.module.css\";\r\n\r\n\r\nfunction FriendsSearch(props) {\r\n    let temp = React.createRef();\r\n    let currentText = () => {\r\n        let text = temp.current.value;\r\n        props.updateSearch(text)\r\n    };\r\n    return(\r\n        <div className={Friends.container__displayFlex}>\r\n            <input\r\n                placeholder='Search friend...'\r\n                className={`${Dialog.input__width} ${Dialog.input__decor} ${Dialog.input__padding}`}\r\n                onChange={currentText}\r\n                ref={temp}\r\n                value={props.tempSearch}\r\n            />\r\n            <NavLink to='users'>\r\n                <button className={`${Content.content__asideRightButton_decor} ${Content.content__asideRightButtonPadding}`}>Find friends</button>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendsSearch","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Dialog from \"../../../../CssModules/Dialog/DialogFriend.module.css\";\r\nimport Friend from \"../../../../CssModules/Profile/FriendList/Friends.module.css\";\r\n\r\nfunction ThatFriend(props) {\r\n    let throwProfileInfo = e => {\r\n        if (props.isFetching) return e.preventDefault()\r\n        props.setAnotherProfile(props.id, 'notMe')\r\n    }\r\n    return (\r\n        <div>\r\n            <NavLink onClick={throwProfileInfo} to={'/profile/' + props.id}\r\n                     className={`${Dialog.display__flex} ${Dialog.hover__decor} ${Dialog.NavLinks__fontsDecor}`}>\r\n                <div>\r\n                    <img className={`${Friend.Friend__Ava} ${Dialog.display__AvaPosition}`} src={props.img} alt='Ava'/>\r\n                </div>\r\n                <div className={Dialog.border__borderBottom}>\r\n                    <p className={`${Dialog.text__NameFontsDecor}`}>{`${props.name}`}</p>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThatFriend\r\n","import React from \"react\";\r\nimport ThatFriend from \"./ThatFriend\";\r\nimport NoResultSearch from \"../../../Common/NoResultSearch\";\r\n\r\nfunction AllFriends(props) {\r\n    // debugger\r\n    let pattern = new RegExp(props.tempSearch, ['giy'] );\r\n    let allFriends = props.friends\r\n        .map(char => {\r\n            if (props.tempSearch.length === 0 || char.name.match(pattern)) {\r\n                return <ThatFriend\r\n                    key={char.id}\r\n                    id={char.id}\r\n                    name={char.name}\r\n                    img={char.avatar}\r\n                    getProfileThunk={props.getProfileThunk}\r\n                    setAnotherProfile={props.setAnotherProfile}\r\n                />\r\n            }\r\n        }\r\n    );\r\n    for (let i = 0; i < allFriends.length; i++) {\r\n        if (allFriends[i]) return (\r\n            <div>\r\n                <p>Friends:<span>{props.friends.length}</span></p>\r\n                {allFriends}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <NoResultSearch/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllFriends;\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport AllFriends from \"./AllFriends\";\r\nimport {getProfileThunk, setAnotherProfile} from \"../../../DataBases/Reducers/ProfileInfoReducer\";\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        friends: state.friendsReducer.friends,\r\n        tempSearch: state.friendsReducer.tempSearch\r\n    }\r\n};\r\n\r\nexport const AllFriendsContainer = connect(mapStateToProps, {getProfileThunk, setAnotherProfile})(AllFriends);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {updateSearch} from \"../../DataBases/Reducers/FriendsReducer\";\r\nimport FriendsSearch from \"./FriendsSearch\";\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        tempSearch: state.friendsReducer.tempSearch\r\n    }\r\n}\r\n\r\nexport const FriendSearchContainer = connect(mapStateToProps, {updateSearch})(FriendsSearch)","import React from \"react\";\r\nimport FriendsSearch from './FriendsSearch'\r\nimport Content from '../../../CssModules/content.module.css'\r\nimport {AllFriendsContainer} from \"./ThatFriend/AllFriendsContainer\";\r\nimport {FriendSearchContainer} from \"./friendsSearchContainer\";\r\n\r\nfunction MyFriends(props) {\r\n    return (\r\n        <div className={Content.content__menu_decorationBlocks}>\r\n            <FriendSearchContainer/>\r\n            <AllFriendsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyFriends\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {setProfile} from \"../DataBases/Reducers/ProfileInfoReducer\";\r\nimport NavigateMenu from \"./NavigateMenu\";\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        freshDialogs: state.messageReducer.freshDialogs,\r\n\r\n    }\r\n}\r\n\r\nexport const NavigateMenuContainer = connect(mapStateToProps,  {setProfile})(NavigateMenu)\r\n","import React, {Suspense} from \"react\";\r\nimport NavigateMenu from \"./LeftMenu/NavigateMenu\";\r\nimport Objects from '../CssModules/DisplayView.module.css';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\"\r\nimport {AllUsersClassContainer} from \"./Friends/FindFriends/AllUsers/allUsersClassContainer\";\r\nimport {ProfileCenterInfoClassContainer} from \"./Profile/MainProfilePage/ProfileCenterInfoClassContainer\";\r\nimport {LoginReduxForm} from \"./UpperMenu/Login/LoginPage/LoginPageContainer\";\r\nimport {SettingsForm} from \"./Settings/settingsContainer\";\r\nimport {DialogPageContainer} from \"./Dialog/MainDialogPage/DialogPage/DialogPageContainer\";\r\nimport {DialogContainer} from \"./Dialog/MainDialogPage/DialogsContainer\";\r\nimport MyFriends from \"./Friends/myFriends/myFriends\";\r\nimport {NavigateMenuContainer} from \"./LeftMenu/navigateMenuContainer\";\r\n\r\n\r\nfunction Text(props) {\r\n    let Profile = () => <ProfileCenterInfoClassContainer/>;\r\n    let dialogs = () => <DialogContainer/>;\r\n    let personDialog = () => <DialogPageContainer/>;\r\n    let myFriends = () => <MyFriends/>;\r\n    let allUsers = () => <AllUsersClassContainer/>;\r\n    let loginPage = () => <LoginReduxForm/>;\r\n    let settingsPage = () => <SettingsForm/>\r\n    return (\r\n        <div className={`${Objects.main__displayGRid}`}>\r\n            <div>\r\n                <NavigateMenuContainer/>\r\n            </div>\r\n            <div>\r\n                <Switch>\r\n                    <Route path='/dialog/:userID' render={personDialog}/>\r\n                    <Route path='/profile' render={Profile}/>\r\n                    <Route path='/dialogs' render={dialogs}/>\r\n                    <Route path='/friends' render={myFriends}/>\r\n                    <Route path='/users' render={allUsers}/>\r\n                    <Route path='/login' render={loginPage}/>\r\n                    <Route path='/settings' render={settingsPage}/>\r\n                    <Redirect from=\"/\" to=\"/profile\"/>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Text\r\n","import React from \"react\";\r\nimport Person from '../../../CssModules/UpperMenu/UpperMenu.module.css'\r\nimport Content from '../../../CssModules/content.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nfunction UpperLogInfo(props) {\r\n    let loginButtonClasses = `\r\n    ${Person.log__margin} \r\n    ${Person.log__padding}\r\n    ${Person.log__button} \r\n    ${Person.log__buttonWidth}\r\n    `;\r\n\r\n    let imgClasses = `\r\n    ${Person.log_img} \r\n    ${Person.log__padding}\r\n    ${Person.log_img__cursorPointer}\r\n    `;\r\n\r\n    let logOut = () => {\r\n        props.postLogOutThunk()\r\n    }\r\n    return (\r\n        <div className={Person.log_display__flex}>\r\n            <div className={`${Person.log__margin} `}>\r\n                {\r\n                    props.didLog ?\r\n                        <img\r\n                            className={imgClasses}\r\n                            src={props.Avatar}\r\n                            onClick={logOut}\r\n                        />\r\n                        :\r\n                        <NavLink to='/login'>\r\n                            <button className={loginButtonClasses}>\r\n                                Login\r\n                            </button>\r\n                        </NavLink>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default UpperLogInfo\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport UpperLogInfo from \"./UpperLogInfo\";\r\nimport {postLogOutThunk} from \"../../DataBases/Reducers/LoginReducer\";\r\nimport emptyPhoto from \"../../../img/Avatars/nullPhoto.jpg\"\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = state =>{\r\n    // debugger\r\n    return {\r\n        didLog: state.loginReducer.isLogged,\r\n        Avatar: state.profileInfoReducer.logged.photos.large || emptyPhoto\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const UpperLogInfoContainer = connect(mapStateToProps, {postLogOutThunk})(UpperLogInfo)\r\n","import React from \"react\";\r\nimport UpMenu from \"../../CssModules/UpperMenu/UpperMenu.module.css\";\r\nimport {UpperLogInfoContainer} from \"./Login/upperLogInfoContainer\";\r\n\r\n\r\nfunction UpperClassContainer() {\r\n\r\n    return (\r\n        <div className={`${UpMenu.container__menu}`}>\r\n            <UpperLogInfoContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpperClassContainer\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n// import {logData} from \"../DataBases/Reducers/ProfileInfoReducer\";\r\nimport {logData} from \"../DataBases/Reducers/LoginReducer\";\r\nimport UpperClassContainer from \"./upperClassContainer\";\r\nimport {getMyProfileThunk} from \"../DataBases/Reducers/ProfileInfoReducer\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const UpperClassContainerTwo = connect(null, {logData, getMyProfileThunk})(UpperClassContainer)\r\n","import Text from \"../mainText\";\r\nimport React from \"react\";\r\nimport {UpperClassContainerTwo} from \"../UpperMenu/upperClassContainerX2\";\r\n\r\nfunction MacketApp(props) {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <UpperClassContainerTwo/>\r\n            </div>\r\n            <div className='container'>\r\n                <Text/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MacketApp\r\n","import React, {useEffect} from \"react\";\r\nimport {logData} from \"../DataBases/Reducers/LoginReducer\";\r\nimport {initializeApp} from \"../DataBases/Reducers/ProfileInfoReducer\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport MacketApp from \"./Structure\";\r\nimport Preloader from \"../Common/Preloader\";\r\nimport {getAllDialogs} from \"../DataBases/Reducers/MessagesReducer\";\r\nimport {API} from \"../DataBases/API/API\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nfunction MacketAppClass(props) {\r\n     useEffect(  () => {\r\n         (async () => {\r\n             let data = await API.getAuth()\r\n             props.logData(data.data.id, data.data.login, data.data.email);\r\n             props.initializeApp(data.data.id)\r\n         })()\r\n    }, [])\r\n    if (props.isLogged && !props.initializate) return <Preloader/>\r\n    return (\r\n        <div>\r\n            {props.initializate && <MacketApp {...props}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        initializate: state.loginReducer.loadProfileData,\r\n        isLogged: state.loginReducer.isLogged,\r\n        isFetching: state.usersReducer.isFetching\r\n    }\r\n}\r\n\r\nexport const MacketAppContainer = compose(\r\n    connect(mapStateToProps, {\r\n        logData,\r\n        initializeApp,\r\n        getAllDialogs,\r\n    }),\r\n    withRouter\r\n)(MacketAppClass)\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './MainSettings.css';\r\nimport './mediaQuery.css'\r\nimport './CssModules/content.module.css'\r\nimport './CssModules/LeftMenu/menu.module.css'\r\nimport './CssModules/Profile/MyPosts/posts.module.css'\r\nimport './CssModules/DisplayView.module.css'\r\nimport './index.css'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {store} from \"./Components/DataBases/Redux/Store\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {MacketAppContainer} from \"./Components/MainStructure/structureContainer\";\r\n\r\n\r\nconst modalRoot = document.getElementById('root');\r\n\r\nexport class Modal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.el = document.createElement('div');\r\n    }\r\n\r\n    componentDidMount() {\r\n        modalRoot.appendChild(this.el);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        modalRoot.removeChild(this.el);\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            this.props.children,\r\n            this.el\r\n        );\r\n    }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <MacketAppContainer/>\r\n        </Provider>\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status_buttons__flex\":\"statusStyles_status_buttons__flex__uZSBc\",\"status_button__decor\":\"statusStyles_status_button__decor__108MN\",\"status__buttonDisabled\":\"statusStyles_status__buttonDisabled__28yzP\",\"status__buttonWidth\":\"statusStyles_status__buttonWidth__XlHwg\",\"status_button__padding\":\"statusStyles_status_button__padding__EOZno\",\"status_button__margins\":\"statusStyles_status_button__margins__2LH6l\",\"status_input__decor\":\"statusStyles_status_input__decor__VXry0\",\"status_input__padding\":\"statusStyles_status_input__padding__1woxJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainInfo_contacts__flexDisplay\":\"mainInfo_mainInfo_contacts__flexDisplay__36i9O\",\"mainInfo_value__margin\":\"mainInfo_mainInfo_value__margin__S1xmv\",\"mainInfo_value__width\":\"mainInfo_mainInfo_value__width__2tOQA\",\"mainInfo_key__width\":\"mainInfo_mainInfo_key__width__Hw_E2\",\"mainInfo_value__decor\":\"mainInfo_mainInfo_value__decor__yU1L7\",\"mainInfo_key__decor\":\"mainInfo_mainInfo_key__decor__Eki2G\",\"mainInfo_showMore__decor\":\"mainInfo_mainInfo_showMore__decor__3uo3d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__displayGRid\":\"DisplayView_main__displayGRid__2w5Hc\",\"inside_ContentProfile__displayFlex\":\"DisplayView_inside_ContentProfile__displayFlex__2YWVJ\",\"inside_ProfileCenter__FlexProportion\":\"DisplayView_inside_ProfileCenter__FlexProportion__1cvEx\",\"inside_ProfileRight__FlexProportion\":\"DisplayView_inside_ProfileRight__FlexProportion__1v8hb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__menu_grid\":\"menu_container__menu_grid__flLcu\",\"container__menu_decoration\":\"menu_container__menu_decoration__1Frok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"captcha_img__decor\":\"loginStyles_captcha_img__decor__3J8bl\",\"captcha_container__block\":\"loginStyles_captcha_container__block__3afEr\",\"captcha_block__margin\":\"loginStyles_captcha_block__margin__1ip2L\",\"captcha_error__decor\":\"loginStyles_captcha_error__decor__eZY76\",\"captcha_errorText__margin\":\"loginStyles_captcha_errorText__margin__1hx-2\",\"captcha_error__block\":\"loginStyles_captcha_error__block__3ihWv\"};","module.exports = __webpack_public_path__ + \"static/media/pendalf.698b2495.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader__position\":\"Preloaders_Preloader__position__vnV2a\",\"Preloader__backgroundOpacity\":\"Preloaders_Preloader__backgroundOpacity__ertqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"font__size\":\"Subscribe_font__size__2J993\",\"display__grid\":\"Subscribe_display__grid__2VjmV\",\"Group__Ava\":\"Subscribe_Group__Ava__Bkd10\",\"Group__Font\":\"Subscribe_Group__Font__K7euG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fileUpload\":\"avatarEditor_fileUpload__2wwdo\",\"avaEdit__button\":\"avatarEditor_avaEdit__button__31J25\",\"avaEdit__buttonDisabled\":\"avatarEditor_avaEdit__buttonDisabled__VX1BM\",\"avaEdit__buttonWidth\":\"avatarEditor_avaEdit__buttonWidth__h-bF4\",\"avaEdit_button__padding\":\"avatarEditor_avaEdit_button__padding__swBSn\",\"avaEdit_button__margin\":\"avatarEditor_avaEdit_button__margin__C38gz\",\"crop\":\"avatarEditor_crop__2Z_Ji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noResult_img__width\":\"resultStyles_noResult_img__width__PPxhc\",\"noResult_img__decor\":\"resultStyles_noResult_img__decor__3R_9W\",\"noResult_img__margin\":\"resultStyles_noResult_img__margin__30_GP\",\"noResult_text__decor\":\"resultStyles_noResult_text__decor__89CPg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content__mainContentHeader\":\"content_content__mainContentHeader__309dF\",\"content__mainContentAvatar\":\"content_content__mainContentAvatar__3Uu6b\",\"content__mainContentName\":\"content_content__mainContentName__Dg3Fz\",\"content__menu_decorationBlocks\":\"content_content__menu_decorationBlocks__3zgBV\",\"content__asideRightInput_decor\":\"content_content__asideRightInput_decor__2Xky5\",\"content__asideRightButton_decor\":\"content_content__asideRightButton_decor__1LMZv\",\"content__asideRightDeleteButton_decor\":\"content_content__asideRightDeleteButton_decor__Nikpo\",\"content__asideRightButton_margin\":\"content_content__asideRightButton_margin__2UPtC\",\"content__asideRightButtonPadding\":\"content_content__asideRightButtonPadding__3uivk\",\"content__menuForm_overflow\":\"content_content__menuForm_overflow__1HQlM\",\"show\":\"content_show__3LQnL\"};","module.exports = __webpack_public_path__ + \"static/media/senya.5a557dc0.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input__decor\":\"Friends_input__decor__313KP\",\"container__displayFlex\":\"Friends_container__displayFlex__37wDl\"};"],"sourceRoot":""}